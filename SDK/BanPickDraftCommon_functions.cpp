#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BanPickDraftCommon

#include "Basic.hpp"

#include "BanPickDraftCommon_classes.hpp"
#include "BanPickDraftCommon_parameters.hpp"


namespace SDK
{

// Function BanPickDraftCommon.DraftActorInterface.GetDraftActor
// (Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const class FName&                      InDraftName                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ADraftReplicatedActor*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class ADraftReplicatedActor* IDraftActorInterface::GetDraftActor(const class FName& InDraftName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("DraftActorInterface", "GetDraftActor");

	Params::DraftActorInterface_GetDraftActor Parms{};

	Parms.InDraftName = InDraftName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftActorInterface.IsUIRelevantOrSpectator
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IDraftActorInterface::IsUIRelevantOrSpectator() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("DraftActorInterface", "IsUIRelevantOrSpectator");

	Params::DraftActorInterface_IsUIRelevantOrSpectator Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	AsUObject()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.EmptyDraftTask
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDraftTask                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDraftTask ADraftReplicatedActor::EmptyDraftTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DraftReplicatedActor", "EmptyDraftTask");

	Params::DraftReplicatedActor_EmptyDraftTask Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskIdsEqual
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDraftTaskId&              A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FDraftTaskId&              B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADraftReplicatedActor::IsTaskIdsEqual(const struct FDraftTaskId& A, const struct FDraftTaskId& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DraftReplicatedActor", "IsTaskIdsEqual");

	Params::DraftReplicatedActor_IsTaskIdsEqual Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskIdValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDraftTaskId&              InTaskId                                               (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADraftReplicatedActor::IsTaskIdValid(const struct FDraftTaskId& InTaskId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DraftReplicatedActor", "IsTaskIdValid");

	Params::DraftReplicatedActor_IsTaskIdValid Parms{};

	Parms.InTaskId = std::move(InTaskId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.IsTaskValid
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDraftTask&                InTask                                                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADraftReplicatedActor::IsTaskValid(const struct FDraftTask& InTask)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DraftReplicatedActor", "IsTaskValid");

	Params::DraftReplicatedActor_IsTaskValid Parms{};

	Parms.InTask = std::move(InTask);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.TasksEqual
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// const struct FDraftTask&                A                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// const struct FDraftTask&                B                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool ADraftReplicatedActor::TasksEqual(const struct FDraftTask& A, const struct FDraftTask& B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("DraftReplicatedActor", "TasksEqual");

	Params::DraftReplicatedActor_TasksEqual Parms{};

	Parms.A = std::move(A);
	Parms.B = std::move(B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.ClientAcknowledgeComplete
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADraftReplicatedActor::ClientAcknowledgeComplete(const struct FDraftTaskId& TaskId, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "ClientAcknowledgeComplete");

	Params::DraftReplicatedActor_ClientAcknowledgeComplete Parms{};

	Parms.TaskId = std::move(TaskId);
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.ClientAcknowledgeSelect
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuccess                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADraftReplicatedActor::ClientAcknowledgeSelect(const struct FDraftTaskId& TaskId, bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "ClientAcknowledgeSelect");

	Params::DraftReplicatedActor_ClientAcknowledgeSelect Parms{};

	Parms.TaskId = std::move(TaskId);
	Parms.bSuccess = bSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.FindChoiceByUObject
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDraftChoice                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)

struct FDraftChoice ADraftReplicatedActor::FindChoiceByUObject(class UObject* ChoiceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "FindChoiceByUObject");

	Params::DraftReplicatedActor_FindChoiceByUObject Parms{};

	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.OnPlayerOwnerLogout
// (Final, Native, Protected)
// Parameters:
// class AActor*                           InActor                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADraftReplicatedActor::OnPlayerOwnerLogout(class AActor* InActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "OnPlayerOwnerLogout");

	Params::DraftReplicatedActor_OnPlayerOwnerLogout Parms{};

	Parms.InActor = InActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.OnRep_AllPersonalTasksAreComplete
// (Final, Native, Protected)

void ADraftReplicatedActor::OnRep_AllPersonalTasksAreComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "OnRep_AllPersonalTasksAreComplete");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.OnRep_Choices
// (Native, Protected)

void ADraftReplicatedActor::OnRep_Choices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "OnRep_Choices");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.OnRep_DraftName
// (Final, Native, Protected)

void ADraftReplicatedActor::OnRep_DraftName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "OnRep_DraftName");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.OnRep_PersonalActiveTask
// (Final, Native, Protected)

void ADraftReplicatedActor::OnRep_PersonalActiveTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "OnRep_PersonalActiveTask");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.RequestCompleteTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECanCompleteDraftTaskResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECanCompleteDraftTaskResult ADraftReplicatedActor::RequestCompleteTask(class UObject* ChoiceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "RequestCompleteTask");

	Params::DraftReplicatedActor_RequestCompleteTask Parms{};

	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.RequestSelect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECanCompleteDraftTaskResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECanCompleteDraftTaskResult ADraftReplicatedActor::RequestSelect(class UObject* ChoiceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "RequestSelect");

	Params::DraftReplicatedActor_RequestSelect Parms{};

	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.ServerRequestComplete
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADraftReplicatedActor::ServerRequestComplete(const struct FDraftTaskId& TaskId, class UObject* ChoiceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "ServerRequestComplete");

	Params::DraftReplicatedActor_ServerRequestComplete Parms{};

	Parms.TaskId = std::move(TaskId);
	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.ServerRequestSelect
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void ADraftReplicatedActor::ServerRequestSelect(const struct FDraftTaskId& TaskId, class UObject* ChoiceObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "ServerRequestSelect");

	Params::DraftReplicatedActor_ServerRequestSelect Parms{};

	Parms.TaskId = std::move(TaskId);
	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetActiveTaskForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDraftPlayerIdHandle&      InPlayerId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool*                                   bPendingComplete                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDraftTask                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FDraftTask ADraftReplicatedActor::GetActiveTaskForPlayer(const struct FDraftPlayerIdHandle& InPlayerId, bool* bPendingComplete) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetActiveTaskForPlayer");

	Params::DraftReplicatedActor_GetActiveTaskForPlayer Parms{};

	Parms.InPlayerId = std::move(InPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bPendingComplete != nullptr)
		*bPendingComplete = Parms.bPendingComplete;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetCompletedTasksForPlayer
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDraftPlayerIdHandle&      InPlayerId                                             (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FDraftTask>               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FDraftTask> ADraftReplicatedActor::GetCompletedTasksForPlayer(const struct FDraftPlayerIdHandle& InPlayerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetCompletedTasksForPlayer");

	Params::DraftReplicatedActor_GetCompletedTasksForPlayer Parms{};

	Parms.InPlayerId = std::move(InPlayerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetOwningPlayerController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APlayerController*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class APlayerController* ADraftReplicatedActor::GetOwningPlayerController() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetOwningPlayerController");

	Params::DraftReplicatedActor_GetOwningPlayerController Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeRemainingByTaskId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ADraftReplicatedActor::GetTimeRemainingByTaskId(const struct FDraftTaskId& TaskId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimeRemainingByTaskId");

	Params::DraftReplicatedActor_GetTimeRemainingByTaskId Parms{};

	Parms.TaskId = std::move(TaskId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeRemainingByTimerId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPGame_ReplicatedTimerId&  TimerId                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ADraftReplicatedActor::GetTimeRemainingByTimerId(const struct FPGame_ReplicatedTimerId& TimerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimeRemainingByTimerId");

	Params::DraftReplicatedActor_GetTimeRemainingByTimerId Parms{};

	Parms.TimerId = std::move(TimerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimerStateByTaskId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FDraftTaskId&              TaskId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPGame_ReplicateTimerState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPGame_ReplicateTimerState ADraftReplicatedActor::GetTimerStateByTaskId(const struct FDraftTaskId& TaskId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimerStateByTaskId");

	Params::DraftReplicatedActor_GetTimerStateByTaskId Parms{};

	Parms.TaskId = std::move(TaskId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimerStateByTimerId
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// const struct FPGame_ReplicatedTimerId&  TimerId                                                (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EPGame_ReplicateTimerState              ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EPGame_ReplicateTimerState ADraftReplicatedActor::GetTimerStateByTimerId(const struct FPGame_ReplicatedTimerId& TimerId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimerStateByTimerId");

	Params::DraftReplicatedActor_GetTimerStateByTimerId Parms{};

	Parms.TimerId = std::move(TimerId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeUntilLastActiveTaskExpires
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ADraftReplicatedActor::GetTimeUntilLastActiveTaskExpires() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimeUntilLastActiveTaskExpires");

	Params::DraftReplicatedActor_GetTimeUntilLastActiveTaskExpires Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.GetTimeUntilNextActiveTaskExpires
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float ADraftReplicatedActor::GetTimeUntilNextActiveTaskExpires() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "GetTimeUntilNextActiveTaskExpires");

	Params::DraftReplicatedActor_GetTimeUntilNextActiveTaskExpires Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftReplicatedActor.IsValidChoiceForPersonalActiveTask
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UObject*                          ChoiceObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ECanCompleteDraftTaskResult             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ECanCompleteDraftTaskResult ADraftReplicatedActor::IsValidChoiceForPersonalActiveTask(class UObject* ChoiceObject) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftReplicatedActor", "IsValidChoiceForPersonalActiveTask");

	Params::DraftReplicatedActor_IsValidChoiceForPersonalActiveTask Parms{};

	Parms.ChoiceObject = ChoiceObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function BanPickDraftCommon.DraftRules.GetOverallStatusTextAndTimer
// (Native, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// const class ADraftReplicatedActor*      InDraftActor                                           (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPGame_ReplicatedTimerId*        OutActiveTimerId                                       (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDraftTask*                      PrimaryTask                                            (Parm, OutParm, NativeAccessSpecifierPublic)
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText UDraftRules::GetOverallStatusTextAndTimer(const class ADraftReplicatedActor* InDraftActor, struct FPGame_ReplicatedTimerId* OutActiveTimerId, struct FDraftTask* PrimaryTask) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DraftRules", "GetOverallStatusTextAndTimer");

	Params::DraftRules_GetOverallStatusTextAndTimer Parms{};

	Parms.InDraftActor = InDraftActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutActiveTimerId != nullptr)
		*OutActiveTimerId = std::move(Parms.OutActiveTimerId);

	if (PrimaryTask != nullptr)
		*PrimaryTask = std::move(Parms.PrimaryTask);

	return Parms.ReturnValue;
}

}

