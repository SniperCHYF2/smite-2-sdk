#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PBP_Items_ShieldSplitter

#include "Basic.hpp"

#include "PBP_Items_ShieldSplitter_classes.hpp"
#include "PBP_Items_ShieldSplitter_parameters.hpp"


namespace SDK
{

// Function PBP_Items_ShieldSplitter.PBP_Items_ShieldSplitter_C.ExecuteUbergraph_PBP_Items_ShieldSplitter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APBP_Items_ShieldSplitter_C::ExecuteUbergraph_PBP_Items_ShieldSplitter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PBP_Items_ShieldSplitter_C", "ExecuteUbergraph_PBP_Items_ShieldSplitter");

	Params::PBP_Items_ShieldSplitter_C_ExecuteUbergraph_PBP_Items_ShieldSplitter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PBP_Items_ShieldSplitter.PBP_Items_ShieldSplitter_C.OnProjectileHitTarget
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGameplayAbilityTargetDataHandle&TargetData                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void APBP_Items_ShieldSplitter_C::OnProjectileHitTarget(const struct FGameplayAbilityTargetDataHandle& TargetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PBP_Items_ShieldSplitter_C", "OnProjectileHitTarget");

	Params::PBP_Items_ShieldSplitter_C_OnProjectileHitTarget Parms{};

	Parms.TargetData = std::move(TargetData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PBP_Items_ShieldSplitter.PBP_Items_ShieldSplitter_C.SpawnMuzzleFlashVFX
// (BlueprintCosmetic, Event, Protected, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APBP_Items_ShieldSplitter_C::SpawnMuzzleFlashVFX(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PBP_Items_ShieldSplitter_C", "SpawnMuzzleFlashVFX");

	Params::PBP_Items_ShieldSplitter_C_SpawnMuzzleFlashVFX Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PBP_Items_ShieldSplitter.PBP_Items_ShieldSplitter_C.UpdateShieldHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UHWShieldInstance*>&       ShieldInstancesArray                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  TrackedHealth                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APBP_Items_ShieldSplitter_C::UpdateShieldHealth(TArray<class UHWShieldInstance*>& ShieldInstancesArray, double TrackedHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PBP_Items_ShieldSplitter_C", "UpdateShieldHealth");

	Params::PBP_Items_ShieldSplitter_C_UpdateShieldHealth Parms{};

	Parms.ShieldInstancesArray = std::move(ShieldInstancesArray);
	Parms.TrackedHealth = TrackedHealth;

	UObject::ProcessEvent(Func, &Parms);

	ShieldInstancesArray = std::move(Parms.ShieldInstancesArray);
}

}

