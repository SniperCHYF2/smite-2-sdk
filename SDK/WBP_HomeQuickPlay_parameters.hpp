#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HomeQuickPlay

#include "Basic.hpp"

#include "RallyHereStart_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "Hemingway_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "EQuickPlayButtonMode_structs.hpp"


namespace SDK::Params
{

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.Apply Pending Display
// 0x0020 (0x0020 - 0x0000)
struct WBP_HomeQuickPlay_C_Apply_Pending_Display final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_Apply_Pending_Display) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_Apply_Pending_Display");
static_assert(sizeof(WBP_HomeQuickPlay_C_Apply_Pending_Display) == 0x000020, "Wrong size on WBP_HomeQuickPlay_C_Apply_Pending_Display");
static_assert(offsetof(WBP_HomeQuickPlay_C_Apply_Pending_Display, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_HomeQuickPlay_C_Apply_Pending_Display::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_Apply_Pending_Display, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WBP_HomeQuickPlay_C_Apply_Pending_Display::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_Apply_Pending_Display, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x000018, "Member 'WBP_HomeQuickPlay_C_Apply_Pending_Display::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_Apply_Pending_Display, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WBP_HomeQuickPlay_C_Apply_Pending_Display::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_Apply_Pending_Display, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00001C, "Member 'WBP_HomeQuickPlay_C_Apply_Pending_Display::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.ApplyKeyShortcutsEnabled
// 0x0015 (0x0015 - 0x0000)
struct WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_INPUT_STATE                               CallFunc_GetCurrentInputState_ReturnValue_1;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled) == 0x000001, "Wrong alignment on WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled");
static_assert(sizeof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled) == 0x000015, "Wrong size on WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_bool_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_byte_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x000006, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000007, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000008, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000009, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_GetCurrentInputState_ReturnValue) == 0x00000B, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_GetCurrentInputState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_BooleanOR_ReturnValue_1) == 0x00000C, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000D, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_BooleanAND_ReturnValue_1) == 0x00000F, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, K2Node_Select_Default) == 0x000010, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_GetCurrentInputState_ReturnValue_1) == 0x000011, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_GetCurrentInputState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000012, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, CallFunc_BooleanAND_ReturnValue_2) == 0x000013, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled, K2Node_Select_Default_1) == 0x000014, "Member 'WBP_HomeQuickPlay_C_ApplyKeyShortcutsEnabled::K2Node_Select_Default_1' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature");
static_assert(sizeof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature");
static_assert(offsetof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_0_OnHovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature");
static_assert(sizeof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature");
static_assert(offsetof(WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_HomeQuickPlay_C_BndEvt__PlayBtnHitTarget_K2Node_ComponentBoundEvent_3_OnUnhovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature");
static_assert(sizeof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature");
static_assert(offsetof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_4_OnHovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature");
static_assert(sizeof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature) == 0x000008, "Wrong size on WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature");
static_assert(offsetof(WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature, Widget) == 0x000000, "Member 'WBP_HomeQuickPlay_C_BndEvt__SupplementaryBtnHitTarget_K2Node_ComponentBoundEvent_5_OnUnhovered__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.ExecuteUbergraph_WBP_HomeQuickPlay
// 0x0380 (0x0380 - 0x0000)
struct WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_Widget_3;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_ComponentBoundEvent_Widget_2;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIX_AttemptJoinSelectedQueue_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_Widget_1;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_ComponentBoundEvent_Widget;                 // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanControl;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanQueue;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanControl_1;         // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanQueue_1;           // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          K2Node_Event_QueueState;                           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIX_AttemptCancelQueue_ReturnValue;       // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_MatchmakingQueueInfo*               K2Node_Event_CurrentSelectedQueue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_1;   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_MatchStatus                               K2Node_Event_CurrentMatchStatus;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TimeElapsed;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIX_AttemptLeaveMatch_ReturnValue;        // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_2;   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingQueueUpdate_ReturnValue;         // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingQueueUpdate_ReturnValue_1;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCustomMatch_ReturnValue;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue_2;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCustomLobbyWithNoInstance_ReturnValue; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& QueueId)> K2Node_CreateDelegate_OutputDelegate;              // 0x00CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_QueueId;                        // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0100(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue_3;        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UIX_AttemptRejoinMatch_ReturnValue;       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectedRegionValid_Return;             // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1;        // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_3;   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged_1;             // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERH_INPUT_STATE InputState)>   K2Node_CreateDelegate_OutputDelegate_4;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWRoleSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue_4;        // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue;    // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x0170(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         CallFunc_GetLocalPlayerInfo_ReturnValue;           // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesPlayerHaveRolePreferences_ReturnValue; // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BrightLobbyHUD_C*                   K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2;        // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged_2;             // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352[0x2];                                      // 0x0352(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0354(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0364(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentQueueTimeElapsed_ImplicitCast; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay");
static_assert(sizeof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay) == 0x000380, "Wrong size on WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, EntryPoint) == 0x000000, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_ComponentBoundEvent_Widget_3) == 0x000008, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_ComponentBoundEvent_Widget_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD) == 0x000010, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_ComponentBoundEvent_Widget_2) == 0x000020, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_ComponentBoundEvent_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Add_View_Route_ViewChanged) == 0x000028, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x00002C, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_UIX_AttemptJoinSelectedQueue_ReturnValue) == 0x000030, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_UIX_AttemptJoinSelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue_1) == 0x000040, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_ComponentBoundEvent_Widget_1) == 0x000048, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_ComponentBoundEvent_Widget) == 0x000050, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueuePermissions_CanControl) == 0x000058, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueuePermissions_CanControl' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueuePermissions_CanQueue) == 0x000059, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueuePermissions_CanQueue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueuePermissions_CanControl_1) == 0x00005A, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueuePermissions_CanControl_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueuePermissions_CanQueue_1) == 0x00005B, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueuePermissions_CanQueue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x00005C, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00005E, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005F, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000060, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_BooleanOR_ReturnValue) == 0x000061, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_Event_QueueState) == 0x000062, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_Event_QueueState' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_UIX_AttemptCancelQueue_ReturnValue) == 0x000063, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_UIX_AttemptCancelQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_Event_CurrentSelectedQueue) == 0x000068, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_Event_CurrentSelectedQueue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetCurrentQuickPlayState_ReturnValue_1) == 0x000070, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetCurrentQuickPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000071, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_Event_CurrentMatchStatus) == 0x000072, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_Event_CurrentMatchStatus' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_BooleanAND_ReturnValue_1) == 0x000073, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue_2) == 0x000078, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_Event_TimeElapsed) == 0x000080, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_Event_TimeElapsed' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_UIX_AttemptLeaveMatch_ReturnValue) == 0x000084, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_UIX_AttemptLeaveMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetCurrentQuickPlayState_ReturnValue_2) == 0x000085, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetCurrentQuickPlayState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_SwitchEnum_CmpSuccess) == 0x000086, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_IsPendingQueueUpdate_ReturnValue) == 0x000087, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_IsPendingQueueUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_IsPendingQueueUpdate_ReturnValue_1) == 0x000088, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_IsPendingQueueUpdate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Not_PreBool_ReturnValue) == 0x000089, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008A, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_AddViewRoute_ReturnValue) == 0x00008B, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000090, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDataFactory_ReturnValue) == 0x0000A0, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDataFactory_ReturnValue_1) == 0x0000A8, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDataFactory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue_3) == 0x0000B0, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_IsInCustomMatch_ReturnValue) == 0x0000B8, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_IsInCustomMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDataFactory_ReturnValue_2) == 0x0000C0, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDataFactory_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_IsInCustomLobbyWithNoInstance_ReturnValue) == 0x0000C8, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_IsInCustomLobbyWithNoInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate) == 0x0000CC, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CustomEvent_QueueId) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CustomEvent_QueueId' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F0, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_2) == 0x000100, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDataFactory_ReturnValue_3) == 0x000110, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDataFactory_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_3) == 0x000118, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_UIX_AttemptRejoinMatch_ReturnValue) == 0x000128, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_UIX_AttemptRejoinMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_IsSelectedRegionValid_Return) == 0x000129, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_IsSelectedRegionValid_Return' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1) == 0x000130, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetCurrentQuickPlayState_ReturnValue_3) == 0x000139, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetCurrentQuickPlayState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Add_View_Route_ViewChanged_1) == 0x00013A, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Add_View_Route_ViewChanged_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00013B, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_4) == 0x00013C, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000150, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDataFactory_ReturnValue_4) == 0x000158, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDataFactory_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetCurrentlySelectedQueue_ReturnValue) == 0x000160, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetCurrentlySelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, Temp_bool_Variable) == 0x000168, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x000170, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x000308, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_Select_Default) == 0x000310, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x000318, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_GetLocalPlayerInfo_ReturnValue) == 0x000320, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_GetLocalPlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue_4) == 0x000328, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_DoesPlayerHaveRolePreferences_ReturnValue) == 0x000330, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_DoesPlayerHaveRolePreferences_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_PlayAnimation_ReturnValue_5) == 0x000338, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Not_PreBool_ReturnValue_2) == 0x000340, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_BooleanAND_ReturnValue_2) == 0x000341, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2) == 0x000348, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_AsBP_Bright_Lobby_HUD_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_DynamicCast_bSuccess_3) == 0x000350, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, CallFunc_Add_View_Route_ViewChanged_2) == 0x000351, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::CallFunc_Add_View_Route_ViewChanged_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_5) == 0x000354, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_CreateDelegate_OutputDelegate_6) == 0x000364, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay, K2Node_VariableSet_CurrentQueueTimeElapsed_ImplicitCast) == 0x000378, "Member 'WBP_HomeQuickPlay_C_ExecuteUbergraph_WBP_HomeQuickPlay::K2Node_VariableSet_CurrentQueueTimeElapsed_ImplicitCast' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.ForceVisualState
// 0x0040 (0x0040 - 0x0000)
struct WBP_HomeQuickPlay_C_ForceVisualState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_ForceVisualState) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_ForceVisualState");
static_assert(sizeof(WBP_HomeQuickPlay_C_ForceVisualState) == 0x000040, "Wrong size on WBP_HomeQuickPlay_C_ForceVisualState");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_bool_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable_2) == 0x000003, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable_3) == 0x000004, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_bool_Variable_1) == 0x000005, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable_4) == 0x000006, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_byte_Variable_5) == 0x000007, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, Temp_bool_Variable_2) == 0x000008, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, K2Node_Select_Default) == 0x00000B, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, K2Node_Select_Default_1) == 0x00000C, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SelectFloat_ReturnValue_1) == 0x000018, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000020, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, K2Node_Select_Default_2) == 0x000021, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000030, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x000034, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ForceVisualState, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2) == 0x000038, "Member 'WBP_HomeQuickPlay_C_ForceVisualState::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.GetDeserterText
// 0x01D8 (0x01D8 - 0x0000)
struct WBP_HomeQuickPlay_C_GetDeserterText final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHPartyManager*                        CallFunc_GetPartyManager_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDeserterTimeRemaining_Hours;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDeserterTimeRemaining_Minutes;         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDeserterTimeRemaining_PlayerName;      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInParty_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0148(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm)
	class FText                                   K2Node_Select_Default;                             // 0x01A8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0018)()
};
static_assert(alignof(WBP_HomeQuickPlay_C_GetDeserterText) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_GetDeserterText");
static_assert(sizeof(WBP_HomeQuickPlay_C_GetDeserterText) == 0x0001D8, "Wrong size on WBP_HomeQuickPlay_C_GetDeserterText");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, Result) == 0x000000, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::Result' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, Temp_bool_Variable) == 0x000018, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_GetPartyManager_ReturnValue) == 0x000020, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_GetDeserterTimeRemaining_Hours) == 0x000028, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_GetDeserterTimeRemaining_Hours' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_GetDeserterTimeRemaining_Minutes) == 0x000038, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_GetDeserterTimeRemaining_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_GetDeserterTimeRemaining_PlayerName) == 0x000048, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_GetDeserterTimeRemaining_PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_IsInParty_ReturnValue) == 0x000058, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_IsInParty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, K2Node_MakeStruct_FormatArgumentData_2) == 0x000148, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, K2Node_MakeArray_Array) == 0x000198, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, K2Node_Select_Default) == 0x0001A8, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterText, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'WBP_HomeQuickPlay_C_GetDeserterText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.GetDeserterTimeRemaining
// 0x0100 (0x0100 - 0x0000)
struct WBP_HomeQuickPlay_C_GetDeserterTimeRemaining final
{
public:
	class FString                                 Hours;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Minutes;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 LocalPlayerName;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              LocalExpirationTime;                               // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHPartyManager*                        CallFunc_GetPartyManager_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DoesPartyHaveDeserter_OutExperationTime;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DoesPartyHaveDeserter_OutPlayerInfo;      // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesPartyHaveDeserter_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue_1;                      // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_GetDeserterTimeRemaining");
static_assert(sizeof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining) == 0x000100, "Wrong size on WBP_HomeQuickPlay_C_GetDeserterTimeRemaining");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, Hours) == 0x000000, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::Hours' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, Minutes) == 0x000010, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::Minutes' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, PlayerName) == 0x000020, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::PlayerName' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, LocalPlayerName) == 0x000030, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::LocalPlayerName' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, LocalExpirationTime) == 0x000040, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::LocalExpirationTime' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_UtcNow_ReturnValue) == 0x000048, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_GetPartyManager_ReturnValue) == 0x000050, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_DoesPartyHaveDeserter_OutExperationTime) == 0x000058, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_DoesPartyHaveDeserter_OutExperationTime' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_DoesPartyHaveDeserter_OutPlayerInfo) == 0x000060, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_DoesPartyHaveDeserter_OutPlayerInfo' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_DoesPartyHaveDeserter_ReturnValue) == 0x000070, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_DoesPartyHaveDeserter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000078, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_BreakTimespan_Days) == 0x000080, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_BreakTimespan_Hours) == 0x000084, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_BreakTimespan_Minutes) == 0x000088, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_BreakTimespan_Seconds) == 0x00008C, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_BreakTimespan_Milliseconds) == 0x000090, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000C0, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Right_ReturnValue) == 0x0000D0, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetDeserterTimeRemaining, CallFunc_Right_ReturnValue_1) == 0x0000F0, "Member 'WBP_HomeQuickPlay_C_GetDeserterTimeRemaining::CallFunc_Right_ReturnValue_1' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.GetNavigationWidgets
// 0x0020 (0x0020 - 0x0000)
struct WBP_HomeQuickPlay_C_GetNavigationWidgets final
{
public:
	TArray<class URHWidget*>                      Return_Value;                                      // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class URHWidget*>                      K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WBP_HomeQuickPlay_C_GetNavigationWidgets) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_GetNavigationWidgets");
static_assert(sizeof(WBP_HomeQuickPlay_C_GetNavigationWidgets) == 0x000020, "Wrong size on WBP_HomeQuickPlay_C_GetNavigationWidgets");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetNavigationWidgets, Return_Value) == 0x000000, "Member 'WBP_HomeQuickPlay_C_GetNavigationWidgets::Return_Value' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetNavigationWidgets, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_HomeQuickPlay_C_GetNavigationWidgets::K2Node_MakeArray_Array' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.GetQueuedTimeText
// 0x00A8 (0x00A8 - 0x0000)
struct WBP_HomeQuickPlay_C_GetQueuedTimeText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_FormatSecondsToTimerText_Timer_Text;      // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
};
static_assert(alignof(WBP_HomeQuickPlay_C_GetQueuedTimeText) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_GetQueuedTimeText");
static_assert(sizeof(WBP_HomeQuickPlay_C_GetQueuedTimeText) == 0x0000A8, "Wrong size on WBP_HomeQuickPlay_C_GetQueuedTimeText");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetQueuedTimeText, ReturnValue) == 0x000000, "Member 'WBP_HomeQuickPlay_C_GetQueuedTimeText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetQueuedTimeText, CallFunc_FormatSecondsToTimerText_Timer_Text) == 0x000018, "Member 'WBP_HomeQuickPlay_C_GetQueuedTimeText::CallFunc_FormatSecondsToTimerText_Timer_Text' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetQueuedTimeText, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'WBP_HomeQuickPlay_C_GetQueuedTimeText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetQueuedTimeText, K2Node_MakeArray_Array) == 0x000080, "Member 'WBP_HomeQuickPlay_C_GetQueuedTimeText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_GetQueuedTimeText, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WBP_HomeQuickPlay_C_GetQueuedTimeText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.HandleInputModeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HomeQuickPlay_C_HandleInputModeChanged final
{
public:
	ERH_INPUT_STATE                               InputMode;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_HandleInputModeChanged) == 0x000001, "Wrong alignment on WBP_HomeQuickPlay_C_HandleInputModeChanged");
static_assert(sizeof(WBP_HomeQuickPlay_C_HandleInputModeChanged) == 0x000001, "Wrong size on WBP_HomeQuickPlay_C_HandleInputModeChanged");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleInputModeChanged, InputMode) == 0x000000, "Member 'WBP_HomeQuickPlay_C_HandleInputModeChanged::InputMode' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.HandleQuickPlayStateUpdate
// 0x0068 (0x0068 - 0x0000)
struct WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate final
{
public:
	EQuickPlayButtonMode                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyInCustomLobby_IsCustom;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyInCustomLobby_IsCustom_1;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_1;   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanControl;           // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanQueue;             // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_2;   // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0018(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0038(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          K2Node_Select_Default_2;                           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanControl_1;         // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQueuePermissions_CanQueue_1;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_3;   // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          K2Node_Select_Default_3;                           // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate");
static_assert(sizeof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate) == 0x000068, "Wrong size on WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_byte_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_bool_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, Temp_bool_Variable_2) == 0x000006, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x000010, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_IsCurrentlyInCustomLobby_IsCustom) == 0x000012, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_IsCurrentlyInCustomLobby_IsCustom' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_IsCurrentlyInCustomLobby_IsCustom_1) == 0x000013, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_IsCurrentlyInCustomLobby_IsCustom_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetCurrentQuickPlayState_ReturnValue_1) == 0x000014, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetCurrentQuickPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetQueuePermissions_CanControl) == 0x000015, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetQueuePermissions_CanControl' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetQueuePermissions_CanQueue) == 0x000016, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetQueuePermissions_CanQueue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetCurrentQuickPlayState_ReturnValue_2) == 0x000017, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetCurrentQuickPlayState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, K2Node_Select_Default) == 0x000018, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000030, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, K2Node_Select_Default_1) == 0x000038, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000051, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000052, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000053, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000054, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000055, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_1) == 0x000056, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000057, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_2) == 0x000058, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_3) == 0x000059, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_4) == 0x00005A, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_5) == 0x00005B, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00005C, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, K2Node_Select_Default_2) == 0x00005D, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanAND_ReturnValue_1) == 0x00005E, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetQueuePermissions_CanControl_1) == 0x00005F, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetQueuePermissions_CanControl_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetQueuePermissions_CanQueue_1) == 0x000060, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetQueuePermissions_CanQueue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanOR_ReturnValue_6) == 0x000061, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_GetCurrentQuickPlayState_ReturnValue_3) == 0x000062, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_GetCurrentQuickPlayState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, K2Node_Select_Default_3) == 0x000063, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000064, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000065, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate, CallFunc_BooleanAND_ReturnValue_2) == 0x000066, "Member 'WBP_HomeQuickPlay_C_HandleQuickPlayStateUpdate::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.IsCurrentlyInCustomLobby
// 0x0018 (0x0018 - 0x0000)
struct WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby final
{
public:
	bool                                          IsCustom;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCustomMatch_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby");
static_assert(sizeof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby) == 0x000018, "Wrong size on WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby, IsCustom) == 0x000000, "Member 'WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby::IsCustom' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000008, "Member 'WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby, CallFunc_IsInCustomMatch_ReturnValue) == 0x000010, "Member 'WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby::CallFunc_IsInCustomMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WBP_HomeQuickPlay_C_IsCurrentlyInCustomLobby::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.OnQueueJoined
// 0x0010 (0x0010 - 0x0000)
struct WBP_HomeQuickPlay_C_OnQueueJoined final
{
public:
	class FString                                 QueueId;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_OnQueueJoined) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_OnQueueJoined");
static_assert(sizeof(WBP_HomeQuickPlay_C_OnQueueJoined) == 0x000010, "Wrong size on WBP_HomeQuickPlay_C_OnQueueJoined");
static_assert(offsetof(WBP_HomeQuickPlay_C_OnQueueJoined, QueueId) == 0x000000, "Member 'WBP_HomeQuickPlay_C_OnQueueJoined::QueueId' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.OnQueueStateUpdate
// 0x0001 (0x0001 - 0x0000)
struct WBP_HomeQuickPlay_C_OnQueueStateUpdate final
{
public:
	ERH_MatchStatus                               CurrentMatchStatus;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_OnQueueStateUpdate) == 0x000001, "Wrong alignment on WBP_HomeQuickPlay_C_OnQueueStateUpdate");
static_assert(sizeof(WBP_HomeQuickPlay_C_OnQueueStateUpdate) == 0x000001, "Wrong size on WBP_HomeQuickPlay_C_OnQueueStateUpdate");
static_assert(offsetof(WBP_HomeQuickPlay_C_OnQueueStateUpdate, CurrentMatchStatus) == 0x000000, "Member 'WBP_HomeQuickPlay_C_OnQueueStateUpdate::CurrentMatchStatus' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.OnSelectedQueueUpdate
// 0x0008 (0x0008 - 0x0000)
struct WBP_HomeQuickPlay_C_OnSelectedQueueUpdate final
{
public:
	class URH_MatchmakingQueueInfo*               CurrentSelectedQueue;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_OnSelectedQueueUpdate) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_OnSelectedQueueUpdate");
static_assert(sizeof(WBP_HomeQuickPlay_C_OnSelectedQueueUpdate) == 0x000008, "Wrong size on WBP_HomeQuickPlay_C_OnSelectedQueueUpdate");
static_assert(offsetof(WBP_HomeQuickPlay_C_OnSelectedQueueUpdate, CurrentSelectedQueue) == 0x000000, "Member 'WBP_HomeQuickPlay_C_OnSelectedQueueUpdate::CurrentSelectedQueue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.OnUpdateQueueTimeElapsed
// 0x0004 (0x0004 - 0x0000)
struct WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed final
{
public:
	float                                         TimeElapsed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed) == 0x000004, "Wrong alignment on WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed");
static_assert(sizeof(WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed) == 0x000004, "Wrong size on WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed");
static_assert(offsetof(WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed, TimeElapsed) == 0x000000, "Member 'WBP_HomeQuickPlay_C_OnUpdateQueueTimeElapsed::TimeElapsed' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.OnUpdateQuickPlayState
// 0x0001 (0x0001 - 0x0000)
struct WBP_HomeQuickPlay_C_OnUpdateQuickPlayState final
{
public:
	EQuickPlayQueueState                          QueueState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_OnUpdateQuickPlayState) == 0x000001, "Wrong alignment on WBP_HomeQuickPlay_C_OnUpdateQuickPlayState");
static_assert(sizeof(WBP_HomeQuickPlay_C_OnUpdateQuickPlayState) == 0x000001, "Wrong size on WBP_HomeQuickPlay_C_OnUpdateQuickPlayState");
static_assert(offsetof(WBP_HomeQuickPlay_C_OnUpdateQuickPlayState, QueueState) == 0x000000, "Member 'WBP_HomeQuickPlay_C_OnUpdateQuickPlayState::QueueState' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.SetCurrentGameModeTextDisplay
// 0x0530 (0x0530 - 0x0000)
struct WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay final
{
public:
	class FText                                   VsAI;                                              // 0x0000(0x0018)(Edit, BlueprintVisible)
	class FText                                   Ranked;                                            // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   ChooseGameModeMsg;                                 // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   Temp_text_Variable;                                // 0x0048(0x0018)()
	EQuickPlayQueueState                          Temp_byte_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x0140(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0158(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0170(0x0018)()
	class FText                                   Temp_text_Variable_13;                             // 0x0188(0x0018)()
	class FText                                   Temp_text_Variable_14;                             // 0x01A0(0x0018)()
	class FText                                   Temp_text_Variable_15;                             // 0x01B8(0x0018)()
	class FText                                   Temp_text_Variable_16;                             // 0x01D0(0x0018)()
	class FText                                   Temp_text_Variable_17;                             // 0x01E8(0x0018)()
	class FText                                   Temp_text_Variable_18;                             // 0x0200(0x0018)()
	class FText                                   Temp_text_Variable_19;                             // 0x0218(0x0018)()
	class FText                                   Temp_text_Variable_20;                             // 0x0230(0x0018)()
	class FText                                   Temp_text_Variable_21;                             // 0x0248(0x0018)()
	class FText                                   Temp_text_Variable_22;                             // 0x0260(0x0018)()
	class FText                                   Temp_text_Variable_23;                             // 0x0278(0x0018)()
	class FText                                   Temp_text_Variable_24;                             // 0x0290(0x0018)()
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue;    // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x02B8(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0458(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_25;                             // 0x0470(0x0018)()
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentlyInCustomLobby_IsCustom;        // 0x048A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B[0x5];                                      // 0x048B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_26;                             // 0x0490(0x0018)()
	class FText                                   Temp_text_Variable_27;                             // 0x04A8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x04C0(0x0018)()
	ERHQueueType                                  Temp_byte_Variable_1;                              // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_1;   // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DA[0x6];                                      // 0x04DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x04E0(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x04F8(0x0018)()
	class FText                                   CallFunc_GetGameModeDisplayName_GameModeDisplayName; // 0x0510(0x0018)()
	bool                                          CallFunc_GetGameModeDisplayName_ReturnValue;       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0529(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay");
static_assert(sizeof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay) == 0x000530, "Wrong size on WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, VsAI) == 0x000000, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::VsAI' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Ranked) == 0x000018, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Ranked' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, ChooseGameModeMsg) == 0x000030, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::ChooseGameModeMsg' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable) == 0x000048, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_byte_Variable) == 0x000060, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_1) == 0x000068, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_2) == 0x000080, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_3) == 0x000098, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_4) == 0x0000B0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_5) == 0x0000C8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_6) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_7) == 0x0000F8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_8) == 0x000110, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_9) == 0x000128, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_10) == 0x000140, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_11) == 0x000158, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_12) == 0x000170, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_13) == 0x000188, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_14) == 0x0001A0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_15) == 0x0001B8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_16) == 0x0001D0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_17) == 0x0001E8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_18) == 0x000200, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_19) == 0x000218, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_20) == 0x000230, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_21) == 0x000248, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_22) == 0x000260, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_23) == 0x000278, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_24) == 0x000290, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetQueueDataFactory_ReturnValue) == 0x0002A8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetCurrentlySelectedQueue_ReturnValue) == 0x0002B0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetCurrentlySelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x0002B8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x000450, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_Conv_TextToString_ReturnValue) == 0x000458, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_Conv_StringToName_ReturnValue) == 0x000468, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_25) == 0x000470, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x000488, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000489, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_IsCurrentlyInCustomLobby_IsCustom) == 0x00048A, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_IsCurrentlyInCustomLobby_IsCustom' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_26) == 0x000490, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_text_Variable_27) == 0x0004A8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_text_Variable_27' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_MakeLiteralText_ReturnValue) == 0x0004C0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, Temp_byte_Variable_1) == 0x0004D8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue_1) == 0x0004D9, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, K2Node_Select_Default) == 0x0004E0, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, K2Node_Select_Default_1) == 0x0004F8, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetGameModeDisplayName_GameModeDisplayName) == 0x000510, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetGameModeDisplayName_GameModeDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_GetGameModeDisplayName_ReturnValue) == 0x000528, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_GetGameModeDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay, CallFunc_TextIsEmpty_ReturnValue) == 0x000529, "Member 'WBP_HomeQuickPlay_C_SetCurrentGameModeTextDisplay::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.SetupGamepadCallout
// 0x0058 (0x0058 - 0x0000)
struct WBP_HomeQuickPlay_C_SetupGamepadCallout final
{
public:
	class URHInputManager*                        CallFunc_GetInputManager_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetButtonForInputAction_Button;           // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonForInputAction_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetButtonForInputAction_Button_1;         // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonForInputAction_ReturnValue_1;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconForGamepadButton_Icon;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetIconForGamepadButton_Icon_1;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_SetupGamepadCallout) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_SetupGamepadCallout");
static_assert(sizeof(WBP_HomeQuickPlay_C_SetupGamepadCallout) == 0x000058, "Wrong size on WBP_HomeQuickPlay_C_SetupGamepadCallout");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetInputManager_ReturnValue) == 0x000000, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetInputManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetButtonForInputAction_Button) == 0x000008, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetButtonForInputAction_Button' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetButtonForInputAction_ReturnValue) == 0x000020, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetButtonForInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetButtonForInputAction_Button_1) == 0x000028, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetButtonForInputAction_Button_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetButtonForInputAction_ReturnValue_1) == 0x000040, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetButtonForInputAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetIconForGamepadButton_Icon) == 0x000048, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetIconForGamepadButton_Icon' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_SetupGamepadCallout, CallFunc_GetIconForGamepadButton_Icon_1) == 0x000050, "Member 'WBP_HomeQuickPlay_C_SetupGamepadCallout::CallFunc_GetIconForGamepadButton_Icon_1' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.TogglePlayButtonMode
// 0x0040 (0x0040 - 0x0000)
struct WBP_HomeQuickPlay_C_TogglePlayButtonMode final
{
public:
	EQuickPlayButtonMode                          InMode;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayButtonMode                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	const class UWidgetAnimation*                 K2Node_Select_Default;                             // 0x0008(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class UWidgetAnimation*                 K2Node_Select_Default_1;                           // 0x0020(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue_1;    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_TogglePlayButtonMode) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_TogglePlayButtonMode");
static_assert(sizeof(WBP_HomeQuickPlay_C_TogglePlayButtonMode) == 0x000040, "Wrong size on WBP_HomeQuickPlay_C_TogglePlayButtonMode");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, InMode) == 0x000000, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::InMode' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, Temp_byte_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, K2Node_Select_Default) == 0x000008, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000010, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, K2Node_Select_Default_1) == 0x000020, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, CallFunc_GetAnimationCurrentTime_ReturnValue_1) == 0x000028, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::CallFunc_GetAnimationCurrentTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_TogglePlayButtonMode, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WBP_HomeQuickPlay_C_TogglePlayButtonMode::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.ToggleSupplementaryBtnEnabled
// 0x0018 (0x0018 - 0x0000)
struct WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled final
{
public:
	bool                                          InIsEnabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled");
static_assert(sizeof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled) == 0x000018, "Wrong size on WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, InIsEnabled) == 0x000000, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::InIsEnabled' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, Temp_byte_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, Temp_byte_Variable_1) == 0x000010, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000011, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, Temp_bool_Variable) == 0x000012, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, K2Node_Select_Default) == 0x000013, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000014, "Member 'WBP_HomeQuickPlay_C_ToggleSupplementaryBtnEnabled::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.UpdateBackfillJoinTime
// 0x0360 (0x0360 - 0x0000)
struct WBP_HomeQuickPlay_C_UpdateBackfillJoinTime final
{
public:
	EHWBackfillState                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWBackfillSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHWBackfillQueueInfo                   CallFunc_GetBackfillQueueInfo_ReturnValue;         // 0x0018(0x0014)(NoDestructor)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableGet_RemainingBackfillStateTime_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0078(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0140(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0158(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0170(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ReferenceParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0228(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0240(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0298(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02A8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0310(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0320(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0338(0x0018)()
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSetRef_Target_ImplicitCast;         // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_UpdateBackfillJoinTime");
static_assert(sizeof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime) == 0x000360, "Wrong size on WBP_HomeQuickPlay_C_UpdateBackfillJoinTime");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, Temp_byte_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, Temp_real_Variable) == 0x000010, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_GetBackfillQueueInfo_ReturnValue) == 0x000018, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_GetBackfillQueueInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_FCeil_ReturnValue) == 0x00002C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_VariableGet_RemainingBackfillStateTime_ImplicitCast) == 0x000034, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_VariableGet_RemainingBackfillStateTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_FromSeconds_ReturnValue) == 0x000038, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_BreakTimespan_Days) == 0x000048, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_BreakTimespan_Hours) == 0x00004C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_BreakTimespan_Minutes) == 0x000050, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_BreakTimespan_Seconds) == 0x000054, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_BreakTimespan_Milliseconds) == 0x000058, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000060, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_IntToString_ReturnValue) == 0x000068, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData) == 0x000078, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000D8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Right_ReturnValue) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_StringToText_ReturnValue) == 0x000140, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000158, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData_2) == 0x000170, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001C0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeArray_Array) == 0x000210, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000220, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Format_ReturnValue) == 0x000228, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData_4) == 0x000240, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000290, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeArray_Array_1) == 0x000298, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002A8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Format_ReturnValue_1) == 0x0002F8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_MakeArray_Array_2) == 0x000310, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Format_ReturnValue_2) == 0x000320, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_Select_Default) == 0x000338, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000350, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillJoinTime, K2Node_VariableSetRef_Target_ImplicitCast) == 0x000358, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillJoinTime::K2Node_VariableSetRef_Target_ImplicitCast' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.UpdateBackfillPips
// 0x0318 (0x0318 - 0x0000)
struct WBP_HomeQuickPlay_C_UpdateBackfillPips final
{
public:
	int32                                         ConnectedPlayers;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        BackfillPipWidgets;                                // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	EHWBackfillState                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWBackfillSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHWBackfillQueueInfo                   CallFunc_GetBackfillQueueInfo_ReturnValue;         // 0x0030(0x0014)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_C_BackfillSeatPip_C*               K2Node_DynamicCast_AsWBP_C_Backfill_Seat_Pip;      // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BreakTimespan2_Days;                      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Hours;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Minutes;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_Seconds;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan2_FractionNano;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0148(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0158(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0208(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0258(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0268(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x027C(0x0014)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0290(0x0018)()
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x02A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x02B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02C8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02E0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x02F8(0x0018)()
	double                                        CallFunc_FCeil_A_ImplicitCast;                     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_UpdateBackfillPips) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_UpdateBackfillPips");
static_assert(sizeof(WBP_HomeQuickPlay_C_UpdateBackfillPips) == 0x000318, "Wrong size on WBP_HomeQuickPlay_C_UpdateBackfillPips");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, ConnectedPlayers) == 0x000000, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::ConnectedPlayers' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, BackfillPipWidgets) == 0x000008, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::BackfillPipWidgets' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, Temp_byte_Variable) == 0x000018, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_GetBackfillQueueInfo_ReturnValue) == 0x000030, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_GetBackfillQueueInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_FromSeconds_ReturnValue) == 0x000060, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_DynamicCast_AsWBP_C_Backfill_Seat_Pip) == 0x000068, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_DynamicCast_AsWBP_C_Backfill_Seat_Pip' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_BreakTimespan2_Days) == 0x000074, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_BreakTimespan2_Days' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_BreakTimespan2_Hours) == 0x000078, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_BreakTimespan2_Hours' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_BreakTimespan2_Minutes) == 0x00007C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_BreakTimespan2_Minutes' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_BreakTimespan2_Seconds) == 0x000080, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_BreakTimespan2_Seconds' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_BreakTimespan2_FractionNano) == 0x000084, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_BreakTimespan2_FractionNano' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_FCeil_ReturnValue) == 0x000088, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000098, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000140, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeArray_Array) == 0x000148, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_FormatArgumentData_2) == 0x000158, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x0001A8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x0001B0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_FormatArgumentData_4) == 0x000208, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeArray_Array_1) == 0x000258, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeArray_Array_2) == 0x000268, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Add_IntInt_ReturnValue_1) == 0x000278, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_MakeStruct_SlateColor) == 0x00027C, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Format_ReturnValue) == 0x000290, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_K2_SetTimer_ReturnValue) == 0x0002A8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002B0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_GetAllChildren_ReturnValue) == 0x0002B8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Format_ReturnValue_1) == 0x0002C8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_Format_ReturnValue_2) == 0x0002E0, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, K2Node_Select_Default) == 0x0002F8, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateBackfillPips, CallFunc_FCeil_A_ImplicitCast) == 0x000310, "Member 'WBP_HomeQuickPlay_C_UpdateBackfillPips::CallFunc_FCeil_A_ImplicitCast' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.UpdateQueueTimer
// 0x02C8 (0x02C8 - 0x0000)
struct WBP_HomeQuickPlay_C_UpdateQueueTimer final
{
public:
	class FText                                   Temp_text_Variable;                                // 0x0000(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   CallFunc_GetDeserterText_Result;                   // 0x0068(0x0018)()
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue;    // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x0090(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0230(0x0018)()
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetGameModeDisplayName_GameModeDisplayName; // 0x0250(0x0018)()
	bool                                          CallFunc_GetGameModeDisplayName_ReturnValue;       // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0270(0x0018)()
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERHQueueType                                  Temp_byte_Variable_2;                              // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_1;   // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0290(0x0018)()
	class FText                                   CallFunc_GetQueuedTimeText_ReturnValue;            // 0x02A8(0x0018)()
	bool                                          CallFunc_IsPendingQueueUpdate_ReturnValue;         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_2;   // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_UpdateQueueTimer) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_UpdateQueueTimer");
static_assert(sizeof(WBP_HomeQuickPlay_C_UpdateQueueTimer) == 0x0002C8, "Wrong size on WBP_HomeQuickPlay_C_UpdateQueueTimer");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_text_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_text_Variable_1) == 0x000018, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_text_Variable_2) == 0x000030, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_bool_Variable) == 0x000048, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_byte_Variable) == 0x000049, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_byte_Variable_1) == 0x00004A, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_text_Variable_3) == 0x000050, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetDeserterText_Result) == 0x000068, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetDeserterText_Result' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000080, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetCurrentlySelectedQueue_ReturnValue) == 0x000088, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetCurrentlySelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x000090, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x000228, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_text_Variable_4) == 0x000230, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x000248, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000249, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, K2Node_Select_Default) == 0x00024A, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetGameModeDisplayName_GameModeDisplayName) == 0x000250, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetGameModeDisplayName_GameModeDisplayName' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetGameModeDisplayName_ReturnValue) == 0x000268, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetGameModeDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_TextToUpper_ReturnValue) == 0x000270, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000288, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, Temp_byte_Variable_2) == 0x000289, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetCurrentQuickPlayState_ReturnValue_1) == 0x00028A, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetCurrentQuickPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00028B, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, K2Node_Select_Default_1) == 0x000290, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetQueuedTimeText_ReturnValue) == 0x0002A8, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetQueuedTimeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_IsPendingQueueUpdate_ReturnValue) == 0x0002C0, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_IsPendingQueueUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_Not_PreBool_ReturnValue) == 0x0002C1, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_GetCurrentQuickPlayState_ReturnValue_2) == 0x0002C2, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_GetCurrentQuickPlayState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0002C3, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateQueueTimer, CallFunc_BooleanAND_ReturnValue) == 0x0002C4, "Member 'WBP_HomeQuickPlay_C_UpdateQueueTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.UpdateStatusModeDisplay
// 0x06A0 (0x06A0 - 0x0000)
struct WBP_HomeQuickPlay_C_UpdateStatusModeDisplay final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          Temp_byte_Variable_8;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0028(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0058(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0070(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0088(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x00A0(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B8(0x0018)()
	int32                                         CallFunc_GetHighestAllowedSR_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSRDifference_ReturnValue;           // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00E8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0138(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0188(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0018)()
	class FText                                   CallFunc_GetDeserterText_Result;                   // 0x01D8(0x0018)()
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue;    // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails;      // 0x0200(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue;       // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03A0(0x0050)(HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue;     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0410(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_1;   // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x042A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x042B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_2;   // 0x042C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x042D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x042E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x042F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue_1;        // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URH_MatchmakingQueueInfo*               CallFunc_GetCurrentlySelectedQueue_ReturnValue_1;  // 0x0438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetQueuedTimeText_ReturnValue;            // 0x0440(0x0018)()
	struct FRHQueueDetails                        CallFunc_GetQueueDetailsByQueue_QueueDetails_1;    // 0x0458(0x0198)()
	bool                                          CallFunc_GetQueueDetailsByQueue_ReturnValue_1;     // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F1[0x7];                                      // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0600(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x0650(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0660(0x0018)()
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_3;   // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuickPlayQueueState                          CallFunc_GetCurrentQuickPlayState_ReturnValue_4;   // 0x0679(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67A[0x6];                                      // 0x067A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_3;                           // 0x0680(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_UpdateStatusModeDisplay");
static_assert(sizeof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay) == 0x0006A0, "Wrong size on WBP_HomeQuickPlay_C_UpdateStatusModeDisplay");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_bool_Variable) == 0x000000, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable) == 0x000001, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_bool_Variable_1) == 0x000003, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_2) == 0x000004, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_3) == 0x000005, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_bool_Variable_2) == 0x000006, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_4) == 0x000007, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_5) == 0x000008, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_bool_Variable_3) == 0x000009, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_6) == 0x00000A, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_7) == 0x00000B, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_byte_Variable_8) == 0x00000C, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable) == 0x000010, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_1) == 0x000028, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_2) == 0x000040, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_3) == 0x000058, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_4) == 0x000070, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_5) == 0x000088, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_6) == 0x0000A0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, Temp_text_Variable_7) == 0x0000B8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetHighestAllowedSR_ReturnValue) == 0x0000D0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetHighestAllowedSR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetMaxSRDifference_ReturnValue) == 0x0000D4, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetMaxSRDifference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000D8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000E0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeStruct_FormatArgumentData) == 0x0000E8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeStruct_FormatArgumentData_1) == 0x000138, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeArray_Array) == 0x000188, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeArray_Array_1) == 0x000198, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetDeserterText_Result) == 0x0001D8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetDeserterText_Result' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDataFactory_ReturnValue) == 0x0001F0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentlySelectedQueue_ReturnValue) == 0x0001F8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentlySelectedQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDetailsByQueue_QueueDetails) == 0x000200, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDetailsByQueue_QueueDetails' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDetailsByQueue_ReturnValue) == 0x000398, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDetailsByQueue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003A0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue) == 0x0003F0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeArray_Array_2) == 0x0003F8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000408, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Format_ReturnValue_2) == 0x000410, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_Select_Default) == 0x000428, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue_1) == 0x000429, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00042A, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_Select_Default_1) == 0x00042B, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue_2) == 0x00042C, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00042D, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_Select_Default_2) == 0x00042E, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x00042F, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDataFactory_ReturnValue_1) == 0x000430, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDataFactory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentlySelectedQueue_ReturnValue_1) == 0x000438, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentlySelectedQueue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueuedTimeText_ReturnValue) == 0x000440, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueuedTimeText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDetailsByQueue_QueueDetails_1) == 0x000458, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDetailsByQueue_QueueDetails_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetQueueDetailsByQueue_ReturnValue_1) == 0x0005F0, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetQueueDetailsByQueue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0005F8, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeStruct_FormatArgumentData_3) == 0x000600, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_MakeArray_Array_3) == 0x000650, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_Format_ReturnValue_3) == 0x000660, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue_3) == 0x000678, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_GetCurrentQuickPlayState_ReturnValue_4) == 0x000679, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_GetCurrentQuickPlayState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_Select_Default_3) == 0x000680, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000698, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_UpdateStatusModeDisplay, K2Node_Select_Default_4) == 0x000699, "Member 'WBP_HomeQuickPlay_C_UpdateStatusModeDisplay::K2Node_Select_Default_4' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.BP_GetDesiredFocusTarget
// 0x0018 (0x0018 - 0x0000)
struct WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget) == 0x000018, "Wrong size on WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget, Temp_bool_Variable) == 0x000008, "Member 'WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget, K2Node_Select_Default) == 0x000010, "Member 'WBP_HomeQuickPlay_C_BP_GetDesiredFocusTarget::K2Node_Select_Default' has a wrong offset!");

// Function WBP_HomeQuickPlay.WBP_HomeQuickPlay_C.IsSelectedRegionValid
// 0x00A0 (0x00A0 - 0x0000)
struct WBP_HomeQuickPlay_C_IsSelectedRegionValid final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARHLobbyHUD*                            K2Node_DynamicCast_AsRallyHere_Client_HUD;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPreferredRegionId_OutRegionId;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPreferredRegionId_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FText>              CallFunc_GetRegionList_OutRegionIdToNameMap;       // 0x0030(0x0050)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0080(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HomeQuickPlay_C_IsSelectedRegionValid) == 0x000008, "Wrong alignment on WBP_HomeQuickPlay_C_IsSelectedRegionValid");
static_assert(sizeof(WBP_HomeQuickPlay_C_IsSelectedRegionValid) == 0x0000A0, "Wrong size on WBP_HomeQuickPlay_C_IsSelectedRegionValid");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, Return) == 0x000000, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::Return' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, K2Node_DynamicCast_AsRallyHere_Client_HUD) == 0x000008, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::K2Node_DynamicCast_AsRallyHere_Client_HUD' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, CallFunc_GetPreferredRegionId_OutRegionId) == 0x000018, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::CallFunc_GetPreferredRegionId_OutRegionId' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, CallFunc_GetPreferredRegionId_ReturnValue) == 0x000028, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::CallFunc_GetPreferredRegionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, CallFunc_GetRegionList_OutRegionIdToNameMap) == 0x000030, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::CallFunc_GetRegionList_OutRegionIdToNameMap' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, CallFunc_Map_Find_Value) == 0x000080, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_HomeQuickPlay_C_IsSelectedRegionValid, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'WBP_HomeQuickPlay_C_IsSelectedRegionValid::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}

