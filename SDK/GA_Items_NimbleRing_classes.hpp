#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Items_NimbleRing

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Hemingway_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Items_NimbleRing.GA_Items_NimbleRing_C
// 0x0028 (0x0F00 - 0x0ED8)
class UGA_Items_NimbleRing_C final : public UHWAbility_PassiveItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0ED8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AActor*                                 Damage_Event_Data;                                 // 0x0EE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            BuffHandle;                                        // 0x0EE8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MagicalPowerThreshold;                             // 0x0EF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StacksToApply;                                     // 0x0EF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StacksLastApplied;                                 // 0x0EFC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Changed_310F86F8493260305D0D94B6A4DF9E09(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem);
	void CleanupListeners();
	void ExecuteUbergraph_GA_Items_NimbleRing(int32 EntryPoint);
	void SetupListeners();
	void UpdatedInt(const struct FGameplayAttribute& Attribute, float NewValue, float OldValue, class UAbilitySystemComponent* OwningAbilitySystem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Items_NimbleRing_C">();
	}
	static class UGA_Items_NimbleRing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Items_NimbleRing_C>();
	}
};
static_assert(alignof(UGA_Items_NimbleRing_C) == 0x000008, "Wrong alignment on UGA_Items_NimbleRing_C");
static_assert(sizeof(UGA_Items_NimbleRing_C) == 0x000F00, "Wrong size on UGA_Items_NimbleRing_C");
static_assert(offsetof(UGA_Items_NimbleRing_C, UberGraphFrame) == 0x000ED8, "Member 'UGA_Items_NimbleRing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Items_NimbleRing_C, Damage_Event_Data) == 0x000EE0, "Member 'UGA_Items_NimbleRing_C::Damage_Event_Data' has a wrong offset!");
static_assert(offsetof(UGA_Items_NimbleRing_C, BuffHandle) == 0x000EE8, "Member 'UGA_Items_NimbleRing_C::BuffHandle' has a wrong offset!");
static_assert(offsetof(UGA_Items_NimbleRing_C, MagicalPowerThreshold) == 0x000EF0, "Member 'UGA_Items_NimbleRing_C::MagicalPowerThreshold' has a wrong offset!");
static_assert(offsetof(UGA_Items_NimbleRing_C, StacksToApply) == 0x000EF8, "Member 'UGA_Items_NimbleRing_C::StacksToApply' has a wrong offset!");
static_assert(offsetof(UGA_Items_NimbleRing_C, StacksLastApplied) == 0x000EFC, "Member 'UGA_Items_NimbleRing_C::StacksLastApplied' has a wrong offset!");

}

