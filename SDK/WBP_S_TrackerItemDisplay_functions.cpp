#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_TrackerItemDisplay

#include "Basic.hpp"

#include "WBP_S_TrackerItemDisplay_classes.hpp"
#include "WBP_S_TrackerItemDisplay_parameters.hpp"


namespace SDK
{

// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleDisplayItemSet
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::BP_HandleDisplayItemSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleDisplayItemSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleEntryButtonHovered
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::BP_HandleEntryButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleEntryButtonHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleEntryButtonSelected
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::BP_HandleEntryButtonSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleEntryButtonSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleEntryButtonUnhovered
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::BP_HandleEntryButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleEntryButtonUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetDisplayOwnershipIcons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InDisplayOwnershipIcons                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::BP_HandleSetDisplayOwnershipIcons(bool InDisplayOwnershipIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleSetDisplayOwnershipIcons");

	Params::WBP_S_TrackerItemDisplay_C_BP_HandleSetDisplayOwnershipIcons Parms{};

	Parms.InDisplayOwnershipIcons = InDisplayOwnershipIcons;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsEquipped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsEquipped                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::BP_HandleSetIsEquipped(bool InIsEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleSetIsEquipped");

	Params::WBP_S_TrackerItemDisplay_C_BP_HandleSetIsEquipped Parms{};

	Parms.InIsEquipped = InIsEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsInteractable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsInteractable                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::BP_HandleSetIsInteractable(bool InIsInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleSetIsInteractable");

	Params::WBP_S_TrackerItemDisplay_C_BP_HandleSetIsInteractable Parms{};

	Parms.InIsInteractable = InIsInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetIsSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InIsSelected                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::BP_HandleSetIsSelected(bool InIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleSetIsSelected");

	Params::WBP_S_TrackerItemDisplay_C_BP_HandleSetIsSelected Parms{};

	Parms.InIsSelected = InIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.BP_HandleSetUseListView
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InUseListView                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::BP_HandleSetUseListView(bool InUseListView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "BP_HandleSetUseListView");

	Params::WBP_S_TrackerItemDisplay_C_BP_HandleSetUseListView Parms{};

	Parms.InUseListView = InUseListView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.ExecuteUbergraph_WBP_S_TrackerItemDisplay
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::ExecuteUbergraph_WBP_S_TrackerItemDisplay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "ExecuteUbergraph_WBP_S_TrackerItemDisplay");

	Params::WBP_S_TrackerItemDisplay_C_ExecuteUbergraph_WBP_S_TrackerItemDisplay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatDistance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InTotalMeters                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UWBP_S_TrackerItemDisplay_C::FormatDistance(const int32 InTotalMeters, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "FormatDistance");

	Params::WBP_S_TrackerItemDisplay_C_FormatDistance Parms{};

	Parms.InTotalMeters = InTotalMeters;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatDuration
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InTotalSeconds                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UWBP_S_TrackerItemDisplay_C::FormatDuration(const int32 InTotalSeconds, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "FormatDuration");

	Params::WBP_S_TrackerItemDisplay_C_FormatDuration Parms{};

	Parms.InTotalSeconds = InTotalSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatQuantity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const int32                             InUnits                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UWBP_S_TrackerItemDisplay_C::FormatQuantity(const int32 InUnits, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "FormatQuantity");

	Params::WBP_S_TrackerItemDisplay_C_FormatQuantity Parms{};

	Parms.InUnits = InUnits;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatQuestProgressCountDisplayText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGodQuestEntry&            InQuestEntry                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bOverrideQuantity                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OverrideQuantity                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            OutDisplayText                                         (Parm, OutParm)

void UWBP_S_TrackerItemDisplay_C::FormatQuestProgressCountDisplayText(const struct FGodQuestEntry& InQuestEntry, bool bOverrideQuantity, int32 OverrideQuantity, class FText* OutDisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "FormatQuestProgressCountDisplayText");

	Params::WBP_S_TrackerItemDisplay_C_FormatQuestProgressCountDisplayText Parms{};

	Parms.InQuestEntry = std::move(InQuestEntry);
	Parms.bOverrideQuantity = bOverrideQuantity;
	Parms.OverrideQuantity = OverrideQuantity;

	UObject::ProcessEvent(Func, &Parms);

	if (OutDisplayText != nullptr)
		*OutDisplayText = std::move(Parms.OutDisplayText);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.FormatSol
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InTotalMeters                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText*                            Result                                                 (Parm, OutParm)

void UWBP_S_TrackerItemDisplay_C::FormatSol(int32 InTotalMeters, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "FormatSol");

	Params::WBP_S_TrackerItemDisplay_C_FormatSol Parms{};

	Parms.InTotalMeters = InTotalMeters;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.HandleEntryButtonHovered
// (Event, Protected, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::HandleEntryButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "HandleEntryButtonHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.HandleEntryButtonSelected
// (Event, Protected, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::HandleEntryButtonSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "HandleEntryButtonSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.HandleEntryButtonUnhovered
// (Event, Protected, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::HandleEntryButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "HandleEntryButtonUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.InitializeWidget
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::InitializeWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "InitializeWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.OnDisplayItemSet
// (Event, Public, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::OnDisplayItemSet()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "OnDisplayItemSet");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetDisplayOwnershipIcons
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInDisplayOwnershipIcons                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetDisplayOwnershipIcons(bool bInDisplayOwnershipIcons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetDisplayOwnershipIcons");

	Params::WBP_S_TrackerItemDisplay_C_SetDisplayOwnershipIcons Parms{};

	Parms.bInDisplayOwnershipIcons = bInDisplayOwnershipIcons;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsEquipped
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsEquipped                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetIsEquipped(bool bInIsEquipped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetIsEquipped");

	Params::WBP_S_TrackerItemDisplay_C_SetIsEquipped Parms{};

	Parms.bInIsEquipped = bInIsEquipped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsInteractable
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsInteractable                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetIsInteractable(bool bInIsInteractable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetIsInteractable");

	Params::WBP_S_TrackerItemDisplay_C_SetIsInteractable Parms{};

	Parms.bInIsInteractable = bInIsInteractable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetIsSelected
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInIsSelected                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetIsSelected(bool bInIsSelected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetIsSelected");

	Params::WBP_S_TrackerItemDisplay_C_SetIsSelected Parms{};

	Parms.bInIsSelected = bInIsSelected;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetOverrideItemQuantity
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Quantity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetOverrideItemQuantity(int32 Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetOverrideItemQuantity");

	Params::WBP_S_TrackerItemDisplay_C_SetOverrideItemQuantity Parms{};

	Parms.Quantity = Quantity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.SetUseListView
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bInUseListView                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_S_TrackerItemDisplay_C::SetUseListView(bool bInUseListView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "SetUseListView");

	Params::WBP_S_TrackerItemDisplay_C_SetUseListView Parms{};

	Parms.bInUseListView = bInUseListView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_S_TrackerItemDisplay.WBP_S_TrackerItemDisplay_C.UpdateOwnershipIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_S_TrackerItemDisplay_C::UpdateOwnershipIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_S_TrackerItemDisplay_C", "UpdateOwnershipIcons");

	UObject::ProcessEvent(Func, nullptr);
}

}

