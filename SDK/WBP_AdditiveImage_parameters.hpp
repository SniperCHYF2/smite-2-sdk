#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AdditiveImage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_AdditiveImage.WBP_AdditiveImage_C.ExecuteUbergraph_WBP_AdditiveImage
// 0x0008 (0x0008 - 0x0000)
struct WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage) == 0x000004, "Wrong alignment on WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage");
static_assert(sizeof(WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage) == 0x000008, "Wrong size on WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage");
static_assert(offsetof(WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage, EntryPoint) == 0x000000, "Member 'WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_AdditiveImage_C_ExecuteUbergraph_WBP_AdditiveImage::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_AdditiveImage.WBP_AdditiveImage_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_AdditiveImage_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdditiveImage_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_AdditiveImage_C_PreConstruct");
static_assert(sizeof(WBP_AdditiveImage_C_PreConstruct) == 0x000001, "Wrong size on WBP_AdditiveImage_C_PreConstruct");
static_assert(offsetof(WBP_AdditiveImage_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_AdditiveImage_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_AdditiveImage.WBP_AdditiveImage_C.SetAdditiveMaterial
// 0x0028 (0x0028 - 0x0000)
struct WBP_AdditiveImage_C_SetAdditiveMaterial final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetBrushResourceAsTexture2D_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_SetDesiredSizeOverride_DesiredSize_ImplicitCast; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AdditiveImage_C_SetAdditiveMaterial) == 0x000008, "Wrong alignment on WBP_AdditiveImage_C_SetAdditiveMaterial");
static_assert(sizeof(WBP_AdditiveImage_C_SetAdditiveMaterial) == 0x000028, "Wrong size on WBP_AdditiveImage_C_SetAdditiveMaterial");
static_assert(offsetof(WBP_AdditiveImage_C_SetAdditiveMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'WBP_AdditiveImage_C_SetAdditiveMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdditiveImage_C_SetAdditiveMaterial, CallFunc_GetBrushResourceAsTexture2D_ReturnValue) == 0x000008, "Member 'WBP_AdditiveImage_C_SetAdditiveMaterial::CallFunc_GetBrushResourceAsTexture2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdditiveImage_C_SetAdditiveMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_AdditiveImage_C_SetAdditiveMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AdditiveImage_C_SetAdditiveMaterial, CallFunc_SetDesiredSizeOverride_DesiredSize_ImplicitCast) == 0x000018, "Member 'WBP_AdditiveImage_C_SetAdditiveMaterial::CallFunc_SetDesiredSizeOverride_DesiredSize_ImplicitCast' has a wrong offset!");

}

