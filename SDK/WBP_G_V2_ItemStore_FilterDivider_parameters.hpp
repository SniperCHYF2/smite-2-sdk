#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_G_V2_ItemStore_FilterDivider

#include "Basic.hpp"

#include "HemingwayUI_structs.hpp"


namespace SDK::Params
{

// Function WBP_G_V2_ItemStore_FilterDivider.WBP_G_V2_ItemStore_FilterDivider_C.UpdateLayout
// 0x0048 (0x0048 - 0x0000)
struct WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout final
{
public:
	EHWItemStoreLayoutType                        Layout;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_5;                              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHWItemStoreLayoutType                        Temp_byte_Variable_2;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_8;                              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_10;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_11;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout) == 0x000004, "Wrong alignment on WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout");
static_assert(sizeof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout) == 0x000048, "Wrong size on WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Layout) == 0x000000, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Layout' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_byte_Variable) == 0x000001, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable) == 0x000004, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_1) == 0x000008, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_2) == 0x00000C, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_3) == 0x000010, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_byte_Variable_1) == 0x000014, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_4) == 0x000018, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_5) == 0x00001C, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_6) == 0x000020, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_7) == 0x000024, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_byte_Variable_2) == 0x000028, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_8) == 0x00002C, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_9) == 0x000030, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_10) == 0x000034, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, Temp_real_Variable_11) == 0x000038, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, K2Node_Select_Default) == 0x00003C, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, K2Node_Select_Default_1) == 0x000040, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout, K2Node_Select_Default_2) == 0x000044, "Member 'WBP_G_V2_ItemStore_FilterDivider_C_UpdateLayout::K2Node_Select_Default_2' has a wrong offset!");

}

