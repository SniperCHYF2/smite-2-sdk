#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Starter_VampiricShroud

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "Hemingway_structs.hpp"


namespace SDK::Params
{

// Function GA_Starter_VampiricShroud.GA_Starter_VampiricShroud_C.ExecuteUbergraph_GA_Starter_VampiricShroud
// 0x0020 (0x0020 - 0x0000)
struct GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FDamageEventData& DamageEventData)> K2Node_CreateDelegate_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud) == 0x000008, "Wrong alignment on GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud");
static_assert(sizeof(GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud) == 0x000020, "Wrong size on GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud");
static_assert(offsetof(GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud, EntryPoint) == 0x000000, "Member 'GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud, CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud::CallFunc_GetHWAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Starter_VampiricShroud_C_ExecuteUbergraph_GA_Starter_VampiricShroud::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function GA_Starter_VampiricShroud.GA_Starter_VampiricShroud_C.OnDamageEvent
// 0x0130 (0x0130 - 0x0000)
struct GA_Starter_VampiricShroud_C_OnDamageEvent final
{
public:
	struct FDamageEventData                       DamageEventData;                                   // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable;                               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_1;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_2;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_3;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BP_GetHWAbilitySystem_bSuccess;           // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHWAbilitySystemComponent*              CallFunc_BP_GetHWAbilitySystem_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHWEquipmentComponent_FiringInstanceTracker* CallFunc_GetEquipmentComponentByClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x00B0(0x0018)()
	struct FHWAbilityFiringInstanceId             CallFunc_GetFiringInstanceIdFromEffectContext_ReturnValue; // 0x00C8(0x0008)(NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TrackFiringInstance_OutCount;             // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrackFiringInstance_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEffectProcOffhandItems_Success;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default_1;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x0110(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Starter_VampiricShroud_C_OnDamageEvent) == 0x000008, "Wrong alignment on GA_Starter_VampiricShroud_C_OnDamageEvent");
static_assert(sizeof(GA_Starter_VampiricShroud_C_OnDamageEvent) == 0x000130, "Wrong size on GA_Starter_VampiricShroud_C_OnDamageEvent");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, DamageEventData) == 0x000000, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::DamageEventData' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_class_Variable) == 0x000070, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_class_Variable_1) == 0x000078, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_bool_Variable) == 0x000080, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_class_Variable_2) == 0x000088, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_class_Variable_3) == 0x000090, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_bool_Variable_1) == 0x000098, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_bool_Variable_2) == 0x000099, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_BP_GetHWAbilitySystem_bSuccess) == 0x00009B, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_BP_GetHWAbilitySystem_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_BP_GetHWAbilitySystem_ReturnValue) == 0x0000A0, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_BP_GetHWAbilitySystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_GetEquipmentComponentByClass_ReturnValue) == 0x0000A8, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_GetEquipmentComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_GetEffectContext_ReturnValue) == 0x0000B0, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_GetFiringInstanceIdFromEffectContext_ReturnValue) == 0x0000C8, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_GetFiringInstanceIdFromEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0000D0, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_TrackFiringInstance_OutCount) == 0x0000E4, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_TrackFiringInstance_OutCount' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_TrackFiringInstance_ReturnValue) == 0x0000E8, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_TrackFiringInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0000E9, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000EA, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_Select_Default) == 0x0000F0, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000F8, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_CanEffectProcOffhandItems_Success) == 0x000100, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_CanEffectProcOffhandItems_Success' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, Temp_bool_Variable_3) == 0x000101, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_BooleanAND_ReturnValue) == 0x000102, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_Select_Default_1) == 0x000108, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x000110, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1) == 0x000118, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Starter_VampiricShroud_C_OnDamageEvent, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000129, "Member 'GA_Starter_VampiricShroud_C_OnDamageEvent::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

}

