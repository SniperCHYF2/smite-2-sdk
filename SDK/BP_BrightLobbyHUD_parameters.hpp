#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BrightLobbyHUD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "RallyHereStart_structs.hpp"


namespace SDK::Params
{

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.TempBootstrapFunctionality
// 0x0018 (0x0018 - 0x0000)
struct BP_BrightLobbyHUD_C_TempBootstrapFunctionality final
{
public:
	TDelegate<void(class URHOrder* Order)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHOrderSubsystem*                      CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_TempBootstrapFunctionality) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_TempBootstrapFunctionality");
static_assert(sizeof(BP_BrightLobbyHUD_C_TempBootstrapFunctionality) == 0x000018, "Wrong size on BP_BrightLobbyHUD_C_TempBootstrapFunctionality");
static_assert(offsetof(BP_BrightLobbyHUD_C_TempBootstrapFunctionality, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BrightLobbyHUD_C_TempBootstrapFunctionality::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_TempBootstrapFunctionality, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BP_BrightLobbyHUD_C_TempBootstrapFunctionality::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.SwapViewRoute
// 0x0028 (0x0028 - 0x0000)
struct BP_BrightLobbyHUD_C_SwapViewRoute final
{
public:
	struct FGameplayTag                           RouteTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           SwapTargetRouteTag;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceTransition;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SwapViewRoute_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_SwapViewRoute) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_SwapViewRoute");
static_assert(sizeof(BP_BrightLobbyHUD_C_SwapViewRoute) == 0x000028, "Wrong size on BP_BrightLobbyHUD_C_SwapViewRoute");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, RouteTag) == 0x000000, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::RouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, SwapTargetRouteTag) == 0x000008, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::SwapTargetRouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, ForceTransition) == 0x000010, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, CallFunc_GetViewManager_ReturnValue) == 0x000018, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SwapViewRoute, CallFunc_SwapViewRoute_ReturnValue) == 0x000021, "Member 'BP_BrightLobbyHUD_C_SwapViewRoute::CallFunc_SwapViewRoute_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.SetupQueueEvents
// 0x0028 (0x0028 - 0x0000)
struct BP_BrightLobbyHUD_C_SetupQueueEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_SetupQueueEvents) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_SetupQueueEvents");
static_assert(sizeof(BP_BrightLobbyHUD_C_SetupQueueEvents) == 0x000028, "Wrong size on BP_BrightLobbyHUD_C_SetupQueueEvents");
static_assert(offsetof(BP_BrightLobbyHUD_C_SetupQueueEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BrightLobbyHUD_C_SetupQueueEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SetupQueueEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_BrightLobbyHUD_C_SetupQueueEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_SetupQueueEvents, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000020, "Member 'BP_BrightLobbyHUD_C_SetupQueueEvents::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Remove Top View Route
// 0x0048 (0x0048 - 0x0000)
struct BP_BrightLobbyHUD_C_Remove_Top_View_Route final
{
public:
	bool                                          ForceTransition;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewChanged;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHLoginDataFactory*                    CallFunc_GetLoginDataFactory_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoggedIn_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue;              // 0x0024(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetViewRouteCount_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveTopViewRoute_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Remove_Top_View_Route) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_Remove_Top_View_Route");
static_assert(sizeof(BP_BrightLobbyHUD_C_Remove_Top_View_Route) == 0x000048, "Wrong size on BP_BrightLobbyHUD_C_Remove_Top_View_Route");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, ForceTransition) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, ViewChanged) == 0x000001, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, Temp_struct_Variable) == 0x000004, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, Temp_struct_Variable_1) == 0x00000C, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_GetLoginDataFactory_ReturnValue) == 0x000018, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_GetLoginDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_IsLoggedIn_ReturnValue) == 0x000020, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_IsLoggedIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_GetTopViewRoute_ReturnValue) == 0x000024, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_GetTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x00002D, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_GetViewRouteCount_ReturnValue) == 0x000030, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_GetViewRouteCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, Temp_bool_Variable) == 0x000034, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, K2Node_Select_Default) == 0x000038, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_Add_View_Route_ViewChanged) == 0x000040, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Remove_Top_View_Route, CallFunc_RemoveTopViewRoute_ReturnValue) == 0x000041, "Member 'BP_BrightLobbyHUD_C_Remove_Top_View_Route::CallFunc_RemoveTopViewRoute_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Is in EOM View State
// 0x0001 (0x0001 - 0x0000)
struct BP_BrightLobbyHUD_C_Is_in_EOM_View_State final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Is_in_EOM_View_State) == 0x000001, "Wrong alignment on BP_BrightLobbyHUD_C_Is_in_EOM_View_State");
static_assert(sizeof(BP_BrightLobbyHUD_C_Is_in_EOM_View_State) == 0x000001, "Wrong size on BP_BrightLobbyHUD_C_Is_in_EOM_View_State");
static_assert(offsetof(BP_BrightLobbyHUD_C_Is_in_EOM_View_State, ReturnValue) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Is_in_EOM_View_State::ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.InternalAddViewRoute
// 0x0038 (0x0038 - 0x0000)
struct BP_BrightLobbyHUD_C_InternalAddViewRoute final
{
public:
	struct FGameplayTag                           RouteTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearRouteStack;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceTransition;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Data;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewChanged;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           NewViewRouteTag;                                   // 0x001C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PreviousViewRouteTag;                              // 0x0024(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetTopViewRoute_ReturnValue;              // 0x002C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_InternalAddViewRoute) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_InternalAddViewRoute");
static_assert(sizeof(BP_BrightLobbyHUD_C_InternalAddViewRoute) == 0x000038, "Wrong size on BP_BrightLobbyHUD_C_InternalAddViewRoute");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, RouteTag) == 0x000000, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::RouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, ClearRouteStack) == 0x000008, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::ClearRouteStack' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, ForceTransition) == 0x000009, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, Data) == 0x000010, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::Data' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, ViewChanged) == 0x000018, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, NewViewRouteTag) == 0x00001C, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::NewViewRouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, PreviousViewRouteTag) == 0x000024, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::PreviousViewRouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, CallFunc_GetTopViewRoute_ReturnValue) == 0x00002C, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::CallFunc_GetTopViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_InternalAddViewRoute, CallFunc_AddViewRoute_ReturnValue) == 0x000034, "Member 'BP_BrightLobbyHUD_C_InternalAddViewRoute::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.HandleOrderReadyToDisplay
// 0x0008 (0x0008 - 0x0000)
struct BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay final
{
public:
	class URHOrder*                               Order;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay");
static_assert(sizeof(BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay) == 0x000008, "Wrong size on BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay");
static_assert(offsetof(BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay, Order) == 0x000000, "Member 'BP_BrightLobbyHUD_C_HandleOrderReadyToDisplay::Order' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.HandleMatchStatusUpdated
// 0x0001 (0x0001 - 0x0000)
struct BP_BrightLobbyHUD_C_HandleMatchStatusUpdated final
{
public:
	ERH_MatchStatus                               MatchStatus;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_HandleMatchStatusUpdated) == 0x000001, "Wrong alignment on BP_BrightLobbyHUD_C_HandleMatchStatusUpdated");
static_assert(sizeof(BP_BrightLobbyHUD_C_HandleMatchStatusUpdated) == 0x000001, "Wrong size on BP_BrightLobbyHUD_C_HandleMatchStatusUpdated");
static_assert(offsetof(BP_BrightLobbyHUD_C_HandleMatchStatusUpdated, MatchStatus) == 0x000000, "Member 'BP_BrightLobbyHUD_C_HandleMatchStatusUpdated::MatchStatus' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Handle Party Invite Received
// 0x0008 (0x0008 - 0x0000)
struct BP_BrightLobbyHUD_C_Handle_Party_Invite_Received final
{
public:
	class URH_PlayerInfo*                         Inviter;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Handle_Party_Invite_Received) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_Handle_Party_Invite_Received");
static_assert(sizeof(BP_BrightLobbyHUD_C_Handle_Party_Invite_Received) == 0x000008, "Wrong size on BP_BrightLobbyHUD_C_Handle_Party_Invite_Received");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Party_Invite_Received, Inviter) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Handle_Party_Invite_Received::Inviter' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Handle Login State Change
// 0x0020 (0x0020 - 0x0000)
struct BP_BrightLobbyHUD_C_Handle_Login_State_Change final
{
public:
	ERHLoginState                                 Login_State;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryExecuteCrossLevelViewRedirect_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged_1;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged_2;             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged_3;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Handle_Login_State_Change) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_Handle_Login_State_Change");
static_assert(sizeof(BP_BrightLobbyHUD_C_Handle_Login_State_Change) == 0x000020, "Wrong size on BP_BrightLobbyHUD_C_Handle_Login_State_Change");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, Login_State) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::Login_State' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_TryExecuteCrossLevelViewRedirect_ReturnValue) == 0x000001, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_TryExecuteCrossLevelViewRedirect_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_Add_View_Route_ViewChanged) == 0x000019, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_Add_View_Route_ViewChanged_1) == 0x00001A, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_Add_View_Route_ViewChanged_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_Add_View_Route_ViewChanged_2) == 0x00001B, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_Add_View_Route_ViewChanged_2' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Handle_Login_State_Change, CallFunc_Add_View_Route_ViewChanged_3) == 0x00001C, "Member 'BP_BrightLobbyHUD_C_Handle_Login_State_Change::CallFunc_Add_View_Route_ViewChanged_3' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.GetPopupManager
// 0x0008 (0x0008 - 0x0000)
struct BP_BrightLobbyHUD_C_GetPopupManager final
{
public:
	class URHPopupManager*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_GetPopupManager) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_GetPopupManager");
static_assert(sizeof(BP_BrightLobbyHUD_C_GetPopupManager) == 0x000008, "Wrong size on BP_BrightLobbyHUD_C_GetPopupManager");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetPopupManager, ReturnValue) == 0x000000, "Member 'BP_BrightLobbyHUD_C_GetPopupManager::ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.GetLobbyWidget
// 0x0008 (0x0008 - 0x0000)
struct BP_BrightLobbyHUD_C_GetLobbyWidget final
{
public:
	class URHWidget*                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_GetLobbyWidget) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_GetLobbyWidget");
static_assert(sizeof(BP_BrightLobbyHUD_C_GetLobbyWidget) == 0x000008, "Wrong size on BP_BrightLobbyHUD_C_GetLobbyWidget");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetLobbyWidget, ReturnValue) == 0x000000, "Member 'BP_BrightLobbyHUD_C_GetLobbyWidget::ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.GetFocusableWidgetContainers
// 0x0038 (0x0038 - 0x0000)
struct BP_BrightLobbyHUD_C_GetFocusableWidgetContainers final
{
public:
	TArray<class UPanelWidget*>                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UPanelWidget*>                   CallFunc_GetFocusableWidgetContainers_ReturnValue; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPanelWidget*>                   K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_GetFocusableWidgetContainers");
static_assert(sizeof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers) == 0x000038, "Wrong size on BP_BrightLobbyHUD_C_GetFocusableWidgetContainers");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers, ReturnValue) == 0x000000, "Member 'BP_BrightLobbyHUD_C_GetFocusableWidgetContainers::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers, CallFunc_GetFocusableWidgetContainers_ReturnValue) == 0x000010, "Member 'BP_BrightLobbyHUD_C_GetFocusableWidgetContainers::CallFunc_GetFocusableWidgetContainers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_BrightLobbyHUD_C_GetFocusableWidgetContainers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetFocusableWidgetContainers, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_BrightLobbyHUD_C_GetFocusableWidgetContainers::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.GetCurrentTransitionRoute
// 0x0010 (0x0010 - 0x0000)
struct BP_BrightLobbyHUD_C_GetCurrentTransitionRoute final
{
public:
	struct FGameplayTag                           Current_Route;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentTransitionRoute_ReturnValue;    // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_GetCurrentTransitionRoute) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_GetCurrentTransitionRoute");
static_assert(sizeof(BP_BrightLobbyHUD_C_GetCurrentTransitionRoute) == 0x000010, "Wrong size on BP_BrightLobbyHUD_C_GetCurrentTransitionRoute");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetCurrentTransitionRoute, Current_Route) == 0x000000, "Member 'BP_BrightLobbyHUD_C_GetCurrentTransitionRoute::Current_Route' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_GetCurrentTransitionRoute, CallFunc_GetCurrentTransitionRoute_ReturnValue) == 0x000008, "Member 'BP_BrightLobbyHUD_C_GetCurrentTransitionRoute::CallFunc_GetCurrentTransitionRoute_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Get Current View Route
// 0x0010 (0x0010 - 0x0000)
struct BP_BrightLobbyHUD_C_Get_Current_View_Route final
{
public:
	struct FGameplayTag                           Current_Route;                                     // 0x0000(0x0008)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetCurrentRoute_ReturnValue;              // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Get_Current_View_Route) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_Get_Current_View_Route");
static_assert(sizeof(BP_BrightLobbyHUD_C_Get_Current_View_Route) == 0x000010, "Wrong size on BP_BrightLobbyHUD_C_Get_Current_View_Route");
static_assert(offsetof(BP_BrightLobbyHUD_C_Get_Current_View_Route, Current_Route) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Get_Current_View_Route::Current_Route' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Get_Current_View_Route, CallFunc_GetCurrentRoute_ReturnValue) == 0x000008, "Member 'BP_BrightLobbyHUD_C_Get_Current_View_Route::CallFunc_GetCurrentRoute_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Get Current Loadout Slot
// 0x0001 (0x0001 - 0x0000)
struct BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot final
{
public:
	ERHLoadoutSlotTypes                           Current_Loadout_Slot;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot) == 0x000001, "Wrong alignment on BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot");
static_assert(sizeof(BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot) == 0x000001, "Wrong size on BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot");
static_assert(offsetof(BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot, Current_Loadout_Slot) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Get_Current_Loadout_Slot::Current_Loadout_Slot' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Focus Sticky Loadout Panel
// 0x0008 (0x0008 - 0x0000)
struct BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel final
{
public:
	class UWidget*                                CallFunc_SetFocusToThis_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel");
static_assert(sizeof(BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel) == 0x000008, "Wrong size on BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel");
static_assert(offsetof(BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel, CallFunc_SetFocusToThis_ReturnValue) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Focus_Sticky_Loadout_Panel::CallFunc_SetFocusToThis_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.FinishPartyInvite
// 0x0030 (0x0030 - 0x0000)
struct BP_BrightLobbyHUD_C_FinishPartyInvite final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisplayName;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(BP_BrightLobbyHUD_C_FinishPartyInvite) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_FinishPartyInvite");
static_assert(sizeof(BP_BrightLobbyHUD_C_FinishPartyInvite) == 0x000030, "Wrong size on BP_BrightLobbyHUD_C_FinishPartyInvite");
static_assert(offsetof(BP_BrightLobbyHUD_C_FinishPartyInvite, bSuccess) == 0x000000, "Member 'BP_BrightLobbyHUD_C_FinishPartyInvite::bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FinishPartyInvite, DisplayName) == 0x000008, "Member 'BP_BrightLobbyHUD_C_FinishPartyInvite::DisplayName' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FinishPartyInvite, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'BP_BrightLobbyHUD_C_FinishPartyInvite::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.FallbackLogoutCleanup
// 0x0058 (0x0058 - 0x0000)
struct BP_BrightLobbyHUD_C_FallbackLogoutCleanup final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPanelWidget*>                   CallFunc_GetFocusableWidgetContainers_ReturnValue; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class URHWidget*                              K2Node_DynamicCast_AsRHWidget;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanCloseOnLogout_ReturnValue;             // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_FallbackLogoutCleanup");
static_assert(sizeof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup) == 0x000058, "Wrong size on BP_BrightLobbyHUD_C_FallbackLogoutCleanup");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, Temp_int_Variable) == 0x000000, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_GetFocusableWidgetContainers_ReturnValue) == 0x000010, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_GetFocusableWidgetContainers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, K2Node_DynamicCast_AsRHWidget) == 0x000040, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::K2Node_DynamicCast_AsRHWidget' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_GetChildrenCount_ReturnValue) == 0x00004C, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_IsVisible_ReturnValue) == 0x000054, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000055, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_CanCloseOnLogout_ReturnValue) == 0x000056, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_CanCloseOnLogout_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_FallbackLogoutCleanup, CallFunc_BooleanAND_ReturnValue) == 0x000057, "Member 'BP_BrightLobbyHUD_C_FallbackLogoutCleanup::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.ExecuteUbergraph_BP_BrightLobbyHUD
// 0x00E0 (0x00E0 - 0x0000)
struct BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_LocalPlayerSubsystem*               CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRoute_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue_1;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReplaceRoute_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERH_MatchStatus                               K2Node_Event_MatchStatus;                          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URHQueueDataFactory*                    CallFunc_GetQueueDataFactory_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInCustomMatch_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class URHViewManager*                         CallFunc_GetViewManager_ReturnValue_2;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHOrder*                               K2Node_Event_Order;                                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveRoute_ReturnValue_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_SafeFrameScale;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayerController_ReturnValue_1;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBrightLobbyWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class URH_PlayerInfo*                         K2Node_CustomEvent_Inviter;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ERHLoginState LoginState)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class URHLoginDataFactory*                    CallFunc_GetLoginDataFactory_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERHLoginState                                 CallFunc_GetCurrentLoginState_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bSuccess, const class FString& DisplayName)> K2Node_CreateDelegate_OutputDelegate_1; // 0x00AC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class URH_PlayerInfo* Inviter)> K2Node_CreateDelegate_OutputDelegate_2;           // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class URHPartyManager*                        CallFunc_GetPartyManager_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Set_Safe_Frame_Scale_ImplicitCast;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD");
static_assert(sizeof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD) == 0x0000E0, "Wrong size on BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, EntryPoint) == 0x000000, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000008, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetViewManager_ReturnValue) == 0x000010, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetViewManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_RemoveRoute_ReturnValue) == 0x000018, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_RemoveRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetViewManager_ReturnValue_1) == 0x000020, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetViewManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_ReplaceRoute_ReturnValue) == 0x000028, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_ReplaceRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_Event_MatchStatus) == 0x000029, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_Event_MatchStatus' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetQueueDataFactory_ReturnValue) == 0x000030, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetQueueDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_IsInCustomMatch_ReturnValue) == 0x000039, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_IsInCustomMatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetViewManager_ReturnValue_2) == 0x000040, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetViewManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_Event_Order) == 0x000048, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_Event_Order' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_RemoveRoute_ReturnValue_1) == 0x000050, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_RemoveRoute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_Event_SafeFrameScale) == 0x000054, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_Event_SafeFrameScale' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_Add_View_Route_ViewChanged) == 0x000058, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetOwningPlayerController_ReturnValue) == 0x000060, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetOwningPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetOwningPlayerController_ReturnValue_1) == 0x000068, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetOwningPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_Create_ReturnValue) == 0x000070, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000078, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_CustomEvent_Inviter) == 0x000080, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_CustomEvent_Inviter' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetLoginDataFactory_ReturnValue) == 0x000098, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetLoginDataFactory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_MakeTimespan_ReturnValue) == 0x0000A0, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetCurrentLoginState_ReturnValue) == 0x0000A8, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetCurrentLoginState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000AC, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000BC, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_GetPartyManager_ReturnValue) == 0x0000D0, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_GetPartyManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD, CallFunc_Set_Safe_Frame_Scale_ImplicitCast) == 0x0000D8, "Member 'BP_BrightLobbyHUD_C_ExecuteUbergraph_BP_BrightLobbyHUD::CallFunc_Set_Safe_Frame_Scale_ImplicitCast' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.CallRemoveTopViewRoute
// 0x0003 (0x0003 - 0x0000)
struct BP_BrightLobbyHUD_C_CallRemoveTopViewRoute final
{
public:
	bool                                          ForceTransition;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewChanged;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Remove_Top_View_Route_ViewChanged;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_CallRemoveTopViewRoute) == 0x000001, "Wrong alignment on BP_BrightLobbyHUD_C_CallRemoveTopViewRoute");
static_assert(sizeof(BP_BrightLobbyHUD_C_CallRemoveTopViewRoute) == 0x000003, "Wrong size on BP_BrightLobbyHUD_C_CallRemoveTopViewRoute");
static_assert(offsetof(BP_BrightLobbyHUD_C_CallRemoveTopViewRoute, ForceTransition) == 0x000000, "Member 'BP_BrightLobbyHUD_C_CallRemoveTopViewRoute::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_CallRemoveTopViewRoute, ViewChanged) == 0x000001, "Member 'BP_BrightLobbyHUD_C_CallRemoveTopViewRoute::ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_CallRemoveTopViewRoute, CallFunc_Remove_Top_View_Route_ViewChanged) == 0x000002, "Member 'BP_BrightLobbyHUD_C_CallRemoveTopViewRoute::CallFunc_Remove_Top_View_Route_ViewChanged' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Call Add View Route
// 0x000C (0x000C - 0x0000)
struct BP_BrightLobbyHUD_C_Call_Add_View_Route final
{
public:
	struct FGameplayTag                           RouteTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearRouteStack;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceTransition;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewChanged;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_View_Route_ViewChanged;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Call_Add_View_Route) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_Call_Add_View_Route");
static_assert(sizeof(BP_BrightLobbyHUD_C_Call_Add_View_Route) == 0x00000C, "Wrong size on BP_BrightLobbyHUD_C_Call_Add_View_Route");
static_assert(offsetof(BP_BrightLobbyHUD_C_Call_Add_View_Route, RouteTag) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Call_Add_View_Route::RouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Call_Add_View_Route, ClearRouteStack) == 0x000008, "Member 'BP_BrightLobbyHUD_C_Call_Add_View_Route::ClearRouteStack' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Call_Add_View_Route, ForceTransition) == 0x000009, "Member 'BP_BrightLobbyHUD_C_Call_Add_View_Route::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Call_Add_View_Route, ViewChanged) == 0x00000A, "Member 'BP_BrightLobbyHUD_C_Call_Add_View_Route::ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Call_Add_View_Route, CallFunc_Add_View_Route_ViewChanged) == 0x00000B, "Member 'BP_BrightLobbyHUD_C_Call_Add_View_Route::CallFunc_Add_View_Route_ViewChanged' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Cache Current Loadout Slot
// 0x0001 (0x0001 - 0x0000)
struct BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot final
{
public:
	ERHLoadoutSlotTypes                           Loadout_Slot_Edit_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot) == 0x000001, "Wrong alignment on BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot");
static_assert(sizeof(BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot) == 0x000001, "Wrong size on BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot");
static_assert(offsetof(BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot, Loadout_Slot_Edit_0) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Cache_Current_Loadout_Slot::Loadout_Slot_Edit_0' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.BP_HandleOrderReadyToDisplay
// 0x0018 (0x0018 - 0x0000)
struct BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay final
{
public:
	class URHOrder*                               Order;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_Get_Current_View_Route_Current_Route;     // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveViewRoute_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddViewRoute_ReturnValue_1;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay) == 0x000008, "Wrong alignment on BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay");
static_assert(sizeof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay) == 0x000018, "Wrong size on BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, Order) == 0x000000, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::Order' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, CallFunc_AddViewRoute_ReturnValue) == 0x000009, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::CallFunc_AddViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, CallFunc_Get_Current_View_Route_Current_Route) == 0x00000C, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::CallFunc_Get_Current_View_Route_Current_Route' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, CallFunc_RemoveViewRoute_ReturnValue) == 0x000014, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::CallFunc_RemoveViewRoute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000015, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay, CallFunc_AddViewRoute_ReturnValue_1) == 0x000016, "Member 'BP_BrightLobbyHUD_C_BP_HandleOrderReadyToDisplay::CallFunc_AddViewRoute_ReturnValue_1' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.BindSettingCallbacks
// 0x0030 (0x0030 - 0x0000)
struct BP_BrightLobbyHUD_C_BindSettingCallbacks final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSettingDelegateStruct                 K2Node_MakeStruct_SettingDelegateStruct;           // 0x0010(0x0020)(NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BrightLobbyHUD_C_BindSettingCallbacks) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_BindSettingCallbacks");
static_assert(sizeof(BP_BrightLobbyHUD_C_BindSettingCallbacks) == 0x000030, "Wrong size on BP_BrightLobbyHUD_C_BindSettingCallbacks");
static_assert(offsetof(BP_BrightLobbyHUD_C_BindSettingCallbacks, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_BrightLobbyHUD_C_BindSettingCallbacks::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_BindSettingCallbacks, K2Node_MakeStruct_SettingDelegateStruct) == 0x000010, "Member 'BP_BrightLobbyHUD_C_BindSettingCallbacks::K2Node_MakeStruct_SettingDelegateStruct' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.ApplySafeFrameScale
// 0x0004 (0x0004 - 0x0000)
struct BP_BrightLobbyHUD_C_ApplySafeFrameScale final
{
public:
	float                                         SafeFrameScale;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_ApplySafeFrameScale) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_ApplySafeFrameScale");
static_assert(sizeof(BP_BrightLobbyHUD_C_ApplySafeFrameScale) == 0x000004, "Wrong size on BP_BrightLobbyHUD_C_ApplySafeFrameScale");
static_assert(offsetof(BP_BrightLobbyHUD_C_ApplySafeFrameScale, SafeFrameScale) == 0x000000, "Member 'BP_BrightLobbyHUD_C_ApplySafeFrameScale::SafeFrameScale' has a wrong offset!");

// Function BP_BrightLobbyHUD.BP_BrightLobbyHUD_C.Add View Route
// 0x000C (0x000C - 0x0000)
struct BP_BrightLobbyHUD_C_Add_View_Route final
{
public:
	struct FGameplayTag                           RouteTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearRouteStack;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceTransition;                                   // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ViewChanged;                                       // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InternalAddViewRoute_ViewChanged;         // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BrightLobbyHUD_C_Add_View_Route) == 0x000004, "Wrong alignment on BP_BrightLobbyHUD_C_Add_View_Route");
static_assert(sizeof(BP_BrightLobbyHUD_C_Add_View_Route) == 0x00000C, "Wrong size on BP_BrightLobbyHUD_C_Add_View_Route");
static_assert(offsetof(BP_BrightLobbyHUD_C_Add_View_Route, RouteTag) == 0x000000, "Member 'BP_BrightLobbyHUD_C_Add_View_Route::RouteTag' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Add_View_Route, ClearRouteStack) == 0x000008, "Member 'BP_BrightLobbyHUD_C_Add_View_Route::ClearRouteStack' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Add_View_Route, ForceTransition) == 0x000009, "Member 'BP_BrightLobbyHUD_C_Add_View_Route::ForceTransition' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Add_View_Route, ViewChanged) == 0x00000A, "Member 'BP_BrightLobbyHUD_C_Add_View_Route::ViewChanged' has a wrong offset!");
static_assert(offsetof(BP_BrightLobbyHUD_C_Add_View_Route, CallFunc_InternalAddViewRoute_ViewChanged) == 0x00000B, "Member 'BP_BrightLobbyHUD_C_Add_View_Route::CallFunc_InternalAddViewRoute_ViewChanged' has a wrong offset!");

}

