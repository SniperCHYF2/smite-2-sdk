#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_S_GodBuilder_BuildDisplay_Aspect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "HemingwayUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_S_GodBuilder_BuildDisplay_Aspect.WBP_S_GodBuilder_BuildDisplay_Aspect_C
// 0x0038 (0x06B8 - 0x0680)
class UWBP_S_GodBuilder_BuildDisplay_Aspect_C final : public UHWGodBuilderBuildDisplayAspectWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHWSizeBox*                             Aspect_SizeBox;                                    // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWWidgetSwitcher*                      Aspect_Switcher;                                   // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               AspectArt_HoverStroke;                             // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWImage*                               AspectIcon;                                        // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHWTextBlock*                           AspectName;                                        // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bShowAspectName;                                   // 0x06B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DisplayInventoryItem(const class UHWInventoryItem* InventoryItem);
	void EquippedStateUpdated(bool bIsEquipped);
	void ExecuteUbergraph_WBP_S_GodBuilder_BuildDisplay_Aspect(int32 EntryPoint);
	void InitializeWidget();
	void PreConstruct(bool IsDesignTime);
	void SetShowAspectName(bool bInShowAspectName);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_S_GodBuilder_BuildDisplay_Aspect_C">();
	}
	static class UWBP_S_GodBuilder_BuildDisplay_Aspect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_S_GodBuilder_BuildDisplay_Aspect_C>();
	}
};
static_assert(alignof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C) == 0x000008, "Wrong alignment on UWBP_S_GodBuilder_BuildDisplay_Aspect_C");
static_assert(sizeof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C) == 0x0006B8, "Wrong size on UWBP_S_GodBuilder_BuildDisplay_Aspect_C");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, UberGraphFrame) == 0x000680, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, Aspect_SizeBox) == 0x000688, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::Aspect_SizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, Aspect_Switcher) == 0x000690, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::Aspect_Switcher' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, AspectArt_HoverStroke) == 0x000698, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::AspectArt_HoverStroke' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, AspectIcon) == 0x0006A0, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::AspectIcon' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, AspectName) == 0x0006A8, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::AspectName' has a wrong offset!");
static_assert(offsetof(UWBP_S_GodBuilder_BuildDisplay_Aspect_C, bShowAspectName) == 0x0006B0, "Member 'UWBP_S_GodBuilder_BuildDisplay_Aspect_C::bShowAspectName' has a wrong offset!");

}

